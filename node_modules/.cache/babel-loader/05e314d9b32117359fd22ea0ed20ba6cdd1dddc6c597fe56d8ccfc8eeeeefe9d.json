{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nexport default {\n  props: {\n    y: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  data: function data() {\n    return {\n      width: 50,\n      height: 80\n    };\n  },\n  computed: {\n    distance: function distance() {\n      return Math.max(0, Math.min(this.y * this.ratio, this.maxDistance));\n    },\n    style: function style() {\n      return \"width:\".concat(this.width / this.ratio, \"px;height:\").concat(this.height / this.ratio, \"px\");\n    }\n  },\n  mounted: function mounted() {\n    this.ratio = window.devicePixelRatio;\n    this.width *= this.ratio;\n    this.height *= this.ratio;\n    this.initRadius = 18 * this.ratio;\n    this.minHeadRadius = 12 * this.ratio;\n    this.minTailRadius = 5 * this.ratio;\n    this.initArrowRadius = 10 * this.ratio;\n    this.minArrowRadius = 6 * this.ratio;\n    this.arrowWidth = 3 * this.ratio;\n    this.maxDistance = 40 * this.ratio;\n    this.initCenterX = 25 * this.ratio;\n    this.initCenterY = 25 * this.ratio;\n    this.headCenter = {\n      x: this.initCenterX,\n      y: this.initCenterY\n    };\n    this._draw();\n  },\n  methods: {\n    _draw: function _draw() {\n      var bubble = this.$refs.bubble;\n      var ctx = bubble.getContext('2d');\n      ctx.clearRect(0, 0, bubble.width, bubble.height);\n      this._drawBubble(ctx);\n      this._drawArrow(ctx);\n    },\n    _drawBubble: function _drawBubble(ctx) {\n      ctx.save();\n      ctx.beginPath();\n      var rate = this.distance / this.maxDistance;\n      var headRadius = this.initRadius - (this.initRadius - this.minHeadRadius) * rate;\n      this.headCenter.y = this.initCenterY - (this.initRadius - this.minHeadRadius) * rate;\n\n      // upper semicircle\n      ctx.arc(this.headCenter.x, this.headCenter.y, headRadius, 0, Math.PI, true);\n\n      // left bessel\n      var tailRadius = this.initRadius - (this.initRadius - this.minTailRadius) * rate;\n      var tailCenter = {\n        x: this.headCenter.x,\n        y: this.headCenter.y + this.distance\n      };\n      var tailPointL = {\n        x: tailCenter.x - tailRadius,\n        y: tailCenter.y\n      };\n      var controlPointL = {\n        x: tailPointL.x,\n        y: tailPointL.y - this.distance / 2\n      };\n      ctx.quadraticCurveTo(controlPointL.x, controlPointL.y, tailPointL.x, tailPointL.y);\n\n      // lower semicircle\n      ctx.arc(tailCenter.x, tailCenter.y, tailRadius, Math.PI, 0, true);\n\n      // right bessel\n      var headPointR = {\n        x: this.headCenter.x + headRadius,\n        y: this.headCenter.y\n      };\n      var controlPointR = {\n        x: tailCenter.x + tailRadius,\n        y: headPointR.y + this.distance / 2\n      };\n      ctx.quadraticCurveTo(controlPointR.x, controlPointR.y, headPointR.x, headPointR.y);\n      ctx.fillStyle = 'rgb(170,170,170)';\n      ctx.fill();\n      ctx.strokeStyle = 'rgb(153,153,153)';\n      ctx.stroke();\n      ctx.restore();\n    },\n    _drawArrow: function _drawArrow(ctx) {\n      ctx.save();\n      ctx.beginPath();\n      var rate = this.distance / this.maxDistance;\n      var arrowRadius = this.initArrowRadius - (this.initArrowRadius - this.minArrowRadius) * rate;\n\n      // inner circle\n      ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius - (this.arrowWidth - rate), -Math.PI / 2, 0, true);\n\n      // outer circle\n      ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius, 0, Math.PI * 3 / 2, false);\n      ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius - this.arrowWidth / 2 + rate);\n      ctx.lineTo(this.headCenter.x + this.arrowWidth * 2 - rate * 2, this.headCenter.y - arrowRadius + this.arrowWidth / 2);\n      ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius + this.arrowWidth * 3 / 2 - rate);\n      ctx.fillStyle = 'rgb(255,255,255)';\n      ctx.fill();\n      ctx.strokeStyle = 'rgb(170,170,170)';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n  watch: {\n    y: function y() {\n      this._draw();\n    }\n  }\n};","map":{"version":3,"names":["props","y","type","Number","data","width","height","computed","distance","Math","max","min","ratio","maxDistance","style","concat","mounted","window","devicePixelRatio","initRadius","minHeadRadius","minTailRadius","initArrowRadius","minArrowRadius","arrowWidth","initCenterX","initCenterY","headCenter","x","_draw","methods","bubble","$refs","ctx","getContext","clearRect","_drawBubble","_drawArrow","save","beginPath","rate","headRadius","arc","PI","tailRadius","tailCenter","tailPointL","controlPointL","quadraticCurveTo","headPointR","controlPointR","fillStyle","fill","strokeStyle","stroke","restore","arrowRadius","lineTo","watch"],"sources":["node_modules/cube-ui/src/components/bubble/bubble.vue"],"sourcesContent":["<template>\n  <canvas ref=\"bubble\" :width=\"width\" :height=\"height\" :style=\"style\"></canvas>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  export default {\n    props: {\n      y: {\n        type: Number,\n        default: 0\n      }\n    },\n    data() {\n      return {\n        width: 50,\n        height: 80\n      }\n    },\n    computed: {\n      distance() {\n        return Math.max(0, Math.min(this.y * this.ratio, this.maxDistance))\n      },\n      style() {\n        return `width:${this.width / this.ratio}px;height:${this.height / this.ratio}px`\n      }\n    },\n    mounted() {\n      this.ratio = window.devicePixelRatio\n      this.width *= this.ratio\n      this.height *= this.ratio\n      this.initRadius = 18 * this.ratio\n      this.minHeadRadius = 12 * this.ratio\n      this.minTailRadius = 5 * this.ratio\n      this.initArrowRadius = 10 * this.ratio\n      this.minArrowRadius = 6 * this.ratio\n      this.arrowWidth = 3 * this.ratio\n      this.maxDistance = 40 * this.ratio\n      this.initCenterX = 25 * this.ratio\n      this.initCenterY = 25 * this.ratio\n      this.headCenter = {\n        x: this.initCenterX,\n        y: this.initCenterY\n      }\n      this._draw()\n    },\n    methods: {\n      _draw() {\n        const bubble = this.$refs.bubble\n        let ctx = bubble.getContext('2d')\n        ctx.clearRect(0, 0, bubble.width, bubble.height)\n\n        this._drawBubble(ctx)\n\n        this._drawArrow(ctx)\n      },\n      _drawBubble(ctx) {\n        ctx.save()\n        ctx.beginPath()\n\n        const rate = this.distance / this.maxDistance\n        const headRadius = this.initRadius - (this.initRadius - this.minHeadRadius) * rate\n\n        this.headCenter.y = this.initCenterY - (this.initRadius - this.minHeadRadius) * rate\n\n        // upper semicircle\n        ctx.arc(this.headCenter.x, this.headCenter.y, headRadius, 0, Math.PI, true)\n\n        // left bessel\n        const tailRadius = this.initRadius - (this.initRadius - this.minTailRadius) * rate\n        const tailCenter = {\n          x: this.headCenter.x,\n          y: this.headCenter.y + this.distance\n        }\n\n        const tailPointL = {\n          x: tailCenter.x - tailRadius,\n          y: tailCenter.y\n        }\n        const controlPointL = {\n          x: tailPointL.x,\n          y: tailPointL.y - this.distance / 2\n        }\n\n        ctx.quadraticCurveTo(controlPointL.x, controlPointL.y, tailPointL.x, tailPointL.y)\n\n        // lower semicircle\n        ctx.arc(tailCenter.x, tailCenter.y, tailRadius, Math.PI, 0, true)\n\n        // right bessel\n        const headPointR = {\n          x: this.headCenter.x + headRadius,\n          y: this.headCenter.y\n        }\n        const controlPointR = {\n          x: tailCenter.x + tailRadius,\n          y: headPointR.y + this.distance / 2\n        }\n        ctx.quadraticCurveTo(controlPointR.x, controlPointR.y, headPointR.x, headPointR.y)\n\n        ctx.fillStyle = 'rgb(170,170,170)'\n        ctx.fill()\n        ctx.strokeStyle = 'rgb(153,153,153)'\n        ctx.stroke()\n        ctx.restore()\n      },\n      _drawArrow(ctx) {\n        ctx.save()\n        ctx.beginPath()\n\n        const rate = this.distance / this.maxDistance\n        const arrowRadius = this.initArrowRadius - (this.initArrowRadius - this.minArrowRadius) * rate\n\n        // inner circle\n        ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius - (this.arrowWidth - rate), -Math.PI / 2, 0, true)\n\n        // outer circle\n        ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius, 0, Math.PI * 3 / 2, false)\n\n        ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius - this.arrowWidth / 2 + rate)\n        ctx.lineTo(this.headCenter.x + this.arrowWidth * 2 - rate * 2, this.headCenter.y - arrowRadius + this.arrowWidth / 2)\n\n        ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius + this.arrowWidth * 3 / 2 - rate)\n\n        ctx.fillStyle = 'rgb(255,255,255)'\n        ctx.fill()\n        ctx.strokeStyle = 'rgb(170,170,170)'\n        ctx.stroke()\n        ctx.restore()\n      }\n    },\n    watch: {\n      y() {\n        this._draw()\n      }\n    }\n  }\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}