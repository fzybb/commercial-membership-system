{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport scrollMixin from '../../common/mixins/scroll';\nimport CubeSticky from '../sticky/sticky.vue';\nimport CubeStickyEle from '../sticky/sticky-ele.vue';\nimport CubeScroll from '../scroll/scroll.vue';\nimport CubeScrollNavBar from '../scroll-nav-bar/scroll-nav-bar.vue';\nvar DIRECTION_H = 'horizontal';\nvar DIRECTION_V = 'vertical';\nvar COMPONENT_NAME = 'cube-scroll-nav';\nvar EVENT_CHANGE = 'change';\nvar EVENT_STICKY_CHANGE = 'sticky-change';\nexport default {\n  name: COMPONENT_NAME,\n  provide: function provide() {\n    return {\n      scrollNav: this\n    };\n  },\n  mixins: [scrollMixin],\n  props: {\n    data: {\n      type: Array\n    },\n    speed: {\n      type: Number,\n      \"default\": 300\n    },\n    side: {\n      type: Boolean,\n      \"default\": false\n    },\n    current: {\n      type: [String, Number],\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      scrollEvents: ['scroll', 'scroll-end'],\n      scrollY: 0,\n      panels: [],\n      active: this.current,\n      pageStickyOffset: 0\n    };\n  },\n  computed: {\n    labels: function labels() {\n      return this.panels.map(function (panel) {\n        return panel.label;\n      });\n    },\n    barTxts: function barTxts() {\n      return this.panels.map(function (panel) {\n        return panel.title;\n      });\n    },\n    barDirection: function barDirection() {\n      return this.side ? DIRECTION_V : DIRECTION_H;\n    }\n  },\n  watch: {\n    current: function current(newVal) {\n      this.stickyCurrent = newVal;\n      this.active = newVal;\n      this.jumpTo(newVal);\n    },\n    active: function active(newVal) {\n      this.$emit(EVENT_CHANGE, newVal);\n    }\n  },\n  created: function created() {\n    this.navBar = null;\n    this.stickyCurrent = this.current;\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      if (_this.side) {\n        var fixedEle = _this.$refs.pageSticky.$refs.fixedEle;\n        _this.$refs.scroll.$el.appendChild(fixedEle);\n      }\n      if (!_this.current) {\n        _this.active = _this.stickyCurrent = _this.labels[0];\n      }\n      _this.refresh();\n      _this.jumpTo(_this.current);\n    });\n  },\n  methods: {\n    scrollTo: function scrollTo() {\n      this.$refs.scroll && this.$refs.scroll.scrollTo.apply(this.$refs.scroll, arguments);\n    },\n    refresh: function refresh() {\n      this.navBar && this.navBar.refresh();\n      this.$refs.sticky.refresh();\n      this.$refs.pageSticky.refresh();\n      this.pageStickyOffset = this.side ? 0 : this.$refs.navBarEle.$el.offsetHeight;\n      this.$refs.scroll.refresh();\n    },\n    setBar: function setBar(bar) {\n      this.navBar = bar;\n    },\n    barChange: function barChange(label) {\n      var _this2 = this;\n      this.active = label;\n      // waiting touchend\n      // so the inner scroll won't affect the touchend logic\n      setTimeout(function () {\n        _this2.jumpTo(label);\n      });\n    },\n    jumpTo: function jumpTo(label) {\n      if (!label) {\n        return;\n      }\n      var panel = this.getPanel(label);\n      if (panel) {\n        this._jumping = true;\n        var offset = this.pageStickyOffset;\n        this.$refs.scroll.scrollToElement(panel.$el, this.speed, 0, this.side ? offset : -offset);\n      }\n    },\n    getPanel: function getPanel(label) {\n      var panel = null;\n      this.panels.some(function (_panel) {\n        if (_panel.label === label) {\n          panel = _panel;\n          return true;\n        }\n      });\n      return panel;\n    },\n    pageStickyChangeHandler: function pageStickyChangeHandler(current) {\n      if (current === '') {\n        current = this.labels[0];\n      }\n      this.stickyCurrent = current;\n      if (this._jumping) {\n        return;\n      }\n      this.active = current;\n    },\n    stickyChangeHandler: function stickyChangeHandler(current) {\n      var _this3 = this;\n      // when sticky change waiting dom changed\n      // then refresh navBar(navBar will get correct height)\n      this.$nextTick(function () {\n        _this3.navBar && _this3.navBar.refresh();\n      });\n      this.$emit(EVENT_STICKY_CHANGE, current);\n    },\n    scrollHandler: function scrollHandler(pos) {\n      this.scrollY = -pos.y;\n      if (!this._jumping) {\n        this.active = this.stickyCurrent;\n      }\n    },\n    scrollEndHandler: function scrollEndHandler() {\n      this._jumping = false;\n    },\n    addPanel: function addPanel(panel) {\n      this.panels.push(panel);\n    },\n    removePanel: function removePanel(panel) {\n      var i = this.panels.indexOf(panel);\n      this.panels.splice(i, 1);\n    }\n  },\n  components: {\n    CubeSticky: CubeSticky,\n    CubeStickyEle: CubeStickyEle,\n    CubeScroll: CubeScroll,\n    CubeScrollNavBar: CubeScrollNavBar\n  }\n};","map":{"version":3,"names":["scrollMixin","CubeSticky","CubeStickyEle","CubeScroll","CubeScrollNavBar","DIRECTION_H","DIRECTION_V","COMPONENT_NAME","EVENT_CHANGE","EVENT_STICKY_CHANGE","name","provide","scrollNav","mixins","props","data","type","Array","speed","Number","side","Boolean","current","String","scrollEvents","scrollY","panels","active","pageStickyOffset","computed","labels","map","panel","label","barTxts","title","barDirection","watch","newVal","stickyCurrent","jumpTo","$emit","created","navBar","mounted","_this","$nextTick","fixedEle","$refs","pageSticky","scroll","$el","appendChild","refresh","methods","scrollTo","apply","arguments","sticky","navBarEle","offsetHeight","setBar","bar","barChange","_this2","setTimeout","getPanel","_jumping","offset","scrollToElement","some","_panel","pageStickyChangeHandler","stickyChangeHandler","_this3","scrollHandler","pos","y","scrollEndHandler","addPanel","push","removePanel","i","indexOf","splice","components"],"sources":["node_modules/cube-ui/src/components/scroll-nav/scroll-nav.vue"],"sourcesContent":["<template>\n  <div class=\"cube-scroll-nav\" :class=\"{'cube-scroll-nav_side': side}\">\n    <cube-sticky ref=\"sticky\" :pos=\"scrollY\" @change=\"stickyChangeHandler\">\n      <cube-scroll\n        ref=\"scroll\"\n        :scroll-events=\"scrollEvents\"\n        :options=\"options\"\n        :data=\"data\"\n        @scroll=\"scrollHandler\"\n        @scroll-end=\"scrollEndHandler\">\n        <slot name=\"prepend\"></slot>\n        <div class=\"cube-scroll-nav-main\">\n          <cube-sticky-ele ref=\"navBarEle\" ele-key=\"cube-scroll-nav-bar\">\n            <slot name=\"bar\" :txts=\"barTxts\" :labels=\"labels\" :current=\"active\">\n              <cube-scroll-nav-bar\n                :direction=\"barDirection\"\n                :txts=\"barTxts\"\n                :labels=\"labels\"\n                :current=\"active\" />\n            </slot>\n          </cube-sticky-ele>\n          <cube-sticky\n            ref=\"pageSticky\"\n            :offset=\"pageStickyOffset\"\n            :pos=\"scrollY\"\n            @change=\"pageStickyChangeHandler\">\n            <div class=\"cube-scroll-nav-panels\">\n              <slot></slot>\n            </div>\n            <template slot=\"fixed\" v-if=\"!side\">\n              <div></div>\n            </template>\n          </cube-sticky>\n        </div>\n      </cube-scroll>\n    </cube-sticky>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import scrollMixin from '../../common/mixins/scroll'\n\n  import CubeSticky from '../sticky/sticky.vue'\n  import CubeStickyEle from '../sticky/sticky-ele.vue'\n  import CubeScroll from '../scroll/scroll.vue'\n  import CubeScrollNavBar from '../scroll-nav-bar/scroll-nav-bar.vue'\n\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n\n  const COMPONENT_NAME = 'cube-scroll-nav'\n  const EVENT_CHANGE = 'change'\n  const EVENT_STICKY_CHANGE = 'sticky-change'\n\n  export default {\n    name: COMPONENT_NAME,\n    provide() {\n      return {\n        scrollNav: this\n      }\n    },\n    mixins: [scrollMixin],\n    props: {\n      data: {\n        type: Array\n      },\n      speed: {\n        type: Number,\n        default: 300\n      },\n      side: {\n        type: Boolean,\n        default: false\n      },\n      current: {\n        type: [String, Number],\n        default: ''\n      }\n    },\n    data() {\n      return {\n        scrollEvents: ['scroll', 'scroll-end'],\n        scrollY: 0,\n        panels: [],\n        active: this.current,\n        pageStickyOffset: 0\n      }\n    },\n    computed: {\n      labels() {\n        return this.panels.map((panel) => panel.label)\n      },\n      barTxts() {\n        return this.panels.map((panel) => panel.title)\n      },\n      barDirection() {\n        return this.side ? DIRECTION_V : DIRECTION_H\n      }\n    },\n    watch: {\n      current(newVal) {\n        this.stickyCurrent = newVal\n        this.active = newVal\n        this.jumpTo(newVal)\n      },\n      active(newVal) {\n        this.$emit(EVENT_CHANGE, newVal)\n      }\n    },\n    created() {\n      this.navBar = null\n      this.stickyCurrent = this.current\n    },\n    mounted() {\n      this.$nextTick(() => {\n        if (this.side) {\n          const fixedEle = this.$refs.pageSticky.$refs.fixedEle\n          this.$refs.scroll.$el.appendChild(fixedEle)\n        }\n        if (!this.current) {\n          this.active = this.stickyCurrent = this.labels[0]\n        }\n        this.refresh()\n        this.jumpTo(this.current)\n      })\n    },\n    methods: {\n      scrollTo() {\n        this.$refs.scroll && this.$refs.scroll.scrollTo.apply(this.$refs.scroll, arguments)\n      },\n      refresh() {\n        this.navBar && this.navBar.refresh()\n        this.$refs.sticky.refresh()\n        this.$refs.pageSticky.refresh()\n        this.pageStickyOffset = this.side ? 0 : this.$refs.navBarEle.$el.offsetHeight\n        this.$refs.scroll.refresh()\n      },\n      setBar(bar) {\n        this.navBar = bar\n      },\n      barChange(label) {\n        this.active = label\n        // waiting touchend\n        // so the inner scroll won't affect the touchend logic\n        setTimeout(() => {\n          this.jumpTo(label)\n        })\n      },\n      jumpTo(label) {\n        if (!label) {\n          return\n        }\n        const panel = this.getPanel(label)\n        if (panel) {\n          this._jumping = true\n          const offset = this.pageStickyOffset\n          this.$refs.scroll.scrollToElement(panel.$el, this.speed, 0, this.side ? offset : -offset)\n        }\n      },\n      getPanel(label) {\n        let panel = null\n        this.panels.some((_panel) => {\n          if (_panel.label === label) {\n            panel = _panel\n            return true\n          }\n        })\n        return panel\n      },\n      pageStickyChangeHandler(current) {\n        if (current === '') {\n          current = this.labels[0]\n        }\n        this.stickyCurrent = current\n        if (this._jumping) {\n          return\n        }\n        this.active = current\n      },\n      stickyChangeHandler(current) {\n        // when sticky change waiting dom changed\n        // then refresh navBar(navBar will get correct height)\n        this.$nextTick(() => {\n          this.navBar && this.navBar.refresh()\n        })\n        this.$emit(EVENT_STICKY_CHANGE, current)\n      },\n      scrollHandler(pos) {\n        this.scrollY = -pos.y\n        if (!this._jumping) {\n          this.active = this.stickyCurrent\n        }\n      },\n      scrollEndHandler() {\n        this._jumping = false\n      },\n      addPanel(panel) {\n        this.panels.push(panel)\n      },\n      removePanel(panel) {\n        const i = this.panels.indexOf(panel)\n        this.panels.splice(i, 1)\n      }\n    },\n    components: {\n      CubeSticky,\n      CubeStickyEle,\n      CubeScroll,\n      CubeScrollNavBar\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  .cube-scroll-nav\n    position: relative\n    height: 100%\n    overflow: hidden\n    .cube-sticky-content\n      height: 100%\n  .cube-scroll-nav-main\n    overflow: hidden\n    > .cube-sticky\n      position: static\n  .cube-scroll-nav_side\n    > .cube-sticky\n      display: flex\n      > .cube-scroll-wrapper\n        flex: 1\n      > .cube-sticky-fixed\n        position: relative\n        height: 100%\n        order: -1\n    .cube-scroll-nav-main\n      > .cube-sticky-ele\n        float: left\n      > .cube-sticky\n        overflow: hidden\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}