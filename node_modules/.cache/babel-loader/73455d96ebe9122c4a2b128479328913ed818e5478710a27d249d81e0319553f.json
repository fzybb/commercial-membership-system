{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { prefixStyle } from '../../common/helpers/dom';\nimport { findIndex } from '../../common/helpers/util';\nimport CubeTab from './tab.vue';\nvar COMPONENT_NAME = 'cube-tab-bar';\nvar EVENT_INPUT = 'input';\nvar EVENT_CHANGE = 'change';\nvar EVENT_CLICK = 'click';\nvar TRANSFORM = prefixStyle('transform');\nvar TRANSITION = prefixStyle('transition');\nexport default {\n  name: COMPONENT_NAME,\n  components: {\n    CubeTab: CubeTab\n  },\n  props: {\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    data: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    inline: {\n      type: Boolean,\n      \"default\": false\n    },\n    showSlider: {\n      type: Boolean,\n      \"default\": false\n    },\n    useTransition: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  watch: {\n    value: function value() {\n      this._updateSliderStyle();\n    }\n  },\n  created: function created() {\n    this.tabs = [];\n  },\n  mounted: function mounted() {\n    this._updateSliderStyle();\n    window.addEventListener('resize', this._resizeHandler);\n  },\n  activated: function activated() {\n    /* istanbul ignore next */\n    window.addEventListener('resize', this._resizeHandler);\n  },\n  deactivated: function deactivated() {\n    /* istanbul ignore next */\n    this._cleanUp();\n  },\n  beforeDestroy: function beforeDestroy() {\n    /* istanbul ignore next */\n    this._cleanUp();\n  },\n  methods: {\n    addTab: function addTab(tab) {\n      this.tabs.push(tab);\n    },\n    removeTab: function removeTab(tab) {\n      var index = this.tabs.indexOf(tab);\n      if (index > -1) this.tabs.splice(index, 1);\n    },\n    trigger: function trigger(value) {\n      var _this = this;\n      // emit click event as long as tab is clicked\n      this.$emit(EVENT_CLICK, value);\n      // only when value changed, emit change & input event\n      if (value !== this.value) {\n        var changedEvents = [EVENT_INPUT, EVENT_CHANGE];\n        changedEvents.forEach(function (eventType) {\n          _this.$emit(eventType, value);\n        });\n      }\n    },\n    _updateSliderStyle: function _updateSliderStyle() {\n      var _this2 = this;\n      /* istanbul ignore if */\n      if (!this.showSlider) return;\n      var slider = this.$refs.slider;\n      this.$nextTick(function () {\n        var _this2$_getSliderWidt = _this2._getSliderWidthAndIndex(),\n          width = _this2$_getSliderWidt.width,\n          index = _this2$_getSliderWidt.index;\n        slider.style.width = \"\".concat(width, \"px\");\n        _this2.setSliderTransform(_this2._getOffsetLeft(index));\n      });\n    },\n    setSliderTransform: function setSliderTransform(offset) {\n      var slider = this.$refs.slider;\n      if (typeof offset === 'number') {\n        offset = \"\".concat(offset, \"px\");\n      }\n      if (slider) {\n        if (this.useTransition) slider.style[TRANSITION] = \"\".concat(TRANSFORM, \" 0.2s linear\");\n        slider.style[TRANSFORM] = \"translateX(\".concat(offset, \") translateZ(0)\");\n      }\n    },\n    _getSliderWidthAndIndex: function _getSliderWidthAndIndex() {\n      var _this3 = this;\n      var width = 0;\n      var index = 0;\n      if (this.tabs.length > 0) {\n        index = findIndex(this.tabs, function (tab) {\n          return tab.value === _this3.value;\n        });\n        width = this.tabs[index].$el.clientWidth;\n      }\n      return {\n        width: width,\n        index: index\n      };\n    },\n    _getOffsetLeft: function _getOffsetLeft(index) {\n      return this.tabs[index].$el.offsetLeft || 0;\n    },\n    _resizeHandler: function _resizeHandler() {\n      var _this4 = this;\n      clearTimeout(this._resizeTimer);\n      this._resizeTimer = setTimeout(function () {\n        _this4._updateSliderStyle();\n      }, 60);\n    },\n    _cleanUp: function _cleanUp() {\n      clearTimeout(this._resizeTimer);\n      window.removeEventListener('resize', this._resizeHandler);\n    }\n  }\n};","map":{"version":3,"names":["prefixStyle","findIndex","CubeTab","COMPONENT_NAME","EVENT_INPUT","EVENT_CHANGE","EVENT_CLICK","TRANSFORM","TRANSITION","name","components","props","value","type","String","Number","required","data","Array","_default","inline","Boolean","showSlider","useTransition","watch","_updateSliderStyle","created","tabs","mounted","window","addEventListener","_resizeHandler","activated","deactivated","_cleanUp","beforeDestroy","methods","addTab","tab","push","removeTab","index","indexOf","splice","trigger","_this","$emit","changedEvents","forEach","eventType","_this2","slider","$refs","$nextTick","_this2$_getSliderWidt","_getSliderWidthAndIndex","width","style","concat","setSliderTransform","_getOffsetLeft","offset","_this3","length","$el","clientWidth","offsetLeft","_this4","clearTimeout","_resizeTimer","setTimeout","removeEventListener"],"sources":["node_modules/cube-ui/src/components/tab-bar/tab-bar.vue"],"sourcesContent":["<template>\n  <div class=\"cube-tab-bar\" :class=\"{'cube-tab-bar_inline': inline}\">\n    <slot>\n      <cube-tab\n        v-for=\"(item, index) in data\"\n        :label=\"item.label\"\n        :value=\"item.value\"\n        :icon=\"item.icon\"\n        :key=\"item.value || item.label\">\n      </cube-tab>\n    </slot>\n    <div v-if=\"showSlider\" ref=\"slider\" class=\"cube-tab-bar-slider\"></div>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  import { prefixStyle } from '../../common/helpers/dom'\n  import { findIndex } from '../../common/helpers/util'\n  import CubeTab from './tab.vue'\n\n  const COMPONENT_NAME = 'cube-tab-bar'\n\n  const EVENT_INPUT = 'input'\n  const EVENT_CHANGE = 'change'\n  const EVENT_CLICK = 'click'\n\n  const TRANSFORM = prefixStyle('transform')\n  const TRANSITION = prefixStyle('transition')\n\n  export default {\n    name: COMPONENT_NAME,\n    components: {\n      CubeTab\n    },\n    props: {\n      value: {\n        type: [String, Number],\n        required: true\n      },\n      data: {\n        type: Array,\n        default () {\n          return []\n        }\n      },\n      inline: {\n        type: Boolean,\n        default: false\n      },\n      showSlider: {\n        type: Boolean,\n        default: false\n      },\n      useTransition: {\n        type: Boolean,\n        default: true\n      }\n    },\n    watch: {\n      value () {\n        this._updateSliderStyle()\n      }\n    },\n    created () {\n      this.tabs = []\n    },\n    mounted () {\n      this._updateSliderStyle()\n      window.addEventListener('resize', this._resizeHandler)\n    },\n    activated() {\n      /* istanbul ignore next */\n      window.addEventListener('resize', this._resizeHandler)\n    },\n    deactivated() {\n      /* istanbul ignore next */\n      this._cleanUp()\n    },\n    beforeDestroy () {\n      /* istanbul ignore next */\n      this._cleanUp()\n    },\n    methods: {\n      addTab (tab) {\n        this.tabs.push(tab)\n      },\n      removeTab (tab) {\n        const index = this.tabs.indexOf(tab)\n        if (index > -1) this.tabs.splice(index, 1)\n      },\n      trigger (value) {\n        // emit click event as long as tab is clicked\n        this.$emit(EVENT_CLICK, value)\n        // only when value changed, emit change & input event\n        if (value !== this.value) {\n          const changedEvents = [EVENT_INPUT, EVENT_CHANGE]\n          changedEvents.forEach((eventType) => {\n            this.$emit(eventType, value)\n          })\n        }\n      },\n      _updateSliderStyle () {\n        /* istanbul ignore if */\n        if (!this.showSlider) return\n        const slider = this.$refs.slider\n        this.$nextTick(() => {\n          const { width, index } = this._getSliderWidthAndIndex()\n          slider.style.width = `${width}px`\n          this.setSliderTransform(this._getOffsetLeft(index))\n        })\n      },\n      setSliderTransform (offset) {\n        const slider = this.$refs.slider\n        if (typeof offset === 'number') {\n          offset = `${offset}px`\n        }\n        if (slider) {\n          if (this.useTransition) slider.style[TRANSITION] = `${TRANSFORM} 0.2s linear`\n          slider.style[TRANSFORM] = `translateX(${offset}) translateZ(0)`\n        }\n      },\n      _getSliderWidthAndIndex () {\n        let width = 0\n        let index = 0\n        if (this.tabs.length > 0) {\n          index = findIndex(this.tabs, (tab) => tab.value === this.value)\n          width = this.tabs[index].$el.clientWidth\n        }\n        return {\n          width,\n          index\n        }\n      },\n      _getOffsetLeft (index) {\n        return this.tabs[index].$el.offsetLeft || 0\n      },\n      _resizeHandler () {\n        clearTimeout(this._resizeTimer)\n        this._resizeTimer = setTimeout(() => {\n          this._updateSliderStyle()\n        }, 60)\n      },\n      _cleanUp () {\n        clearTimeout(this._resizeTimer)\n        window.removeEventListener('resize', this._resizeHandler)\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-tab-bar\n    position: relative\n    display: flex\n    align-items: center\n    justify-content: center\n\n  .cube-tab-bar_inline\n    .cube-tab\n      display: flex\n      align-content: center\n      justify-content: center\n\n  .cube-tab-bar-slider\n    position: absolute\n    left: 0\n    bottom: 0\n    height: 2px\n    width: 20px\n    background-color: $tab-slider-bgc\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}