{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport inputMixin from '../../common/mixins/input';\nvar COMPONENT_NAME = 'cube-textarea';\nvar EVENT_INPUT = 'input';\nvar DEFAULT_INDICATOR = {\n  negative: true,\n  remain: true\n};\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [inputMixin],\n  data: function data() {\n    return {\n      textareaValue: this.value,\n      expanded: this.autoExpand ? !!this.value : false,\n      isFocus: false\n    };\n  },\n  props: {\n    value: {\n      type: String,\n      \"default\": ''\n    },\n    cols: Number,\n    rows: Number,\n    readonly: Boolean,\n    wrap: String,\n    required: Boolean,\n    placeholder: {\n      type: String,\n      \"default\": 'please type here...'\n    },\n    dirname: String,\n    form: String,\n    name: String,\n    autofocus: Boolean,\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    maxlength: {\n      type: Number,\n      \"default\": 60\n    },\n    indicator: {\n      type: [Boolean, Object],\n      \"default\": true\n    },\n    autoExpand: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  computed: {\n    indicatorConf: function indicatorConf() {\n      var indicator = this.indicator;\n      if (typeof indicator === 'boolean') {\n        indicator = {};\n      }\n      return Object.assign({}, DEFAULT_INDICATOR, indicator);\n    },\n    count: function count() {\n      return this.textareaValue.length;\n    },\n    remain: function remain() {\n      var diff = this.maxlength - this.count;\n      if (!this.indicatorConf.negative && diff < 0) {\n        diff = 0;\n      }\n      return diff;\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.textareaValue = newValue;\n    },\n    textareaValue: function textareaValue(newValue) {\n      this.$emit(EVENT_INPUT, newValue);\n      if (!this.isFocus && this.expanded) {\n        this.expanded = false;\n      }\n    }\n  },\n  methods: {\n    handleFocus: function handleFocus(e) {\n      this.$emit('focus', e);\n      this.expanded = true;\n      this.isFocus = true;\n    },\n    handleBlur: function handleBlur(e) {\n      this.$emit('blur', e);\n      if (this.textareaValue.length === 0) {\n        this.expanded = false;\n      }\n      this.isFocus = false;\n    }\n  }\n};","map":{"version":3,"names":["inputMixin","COMPONENT_NAME","EVENT_INPUT","DEFAULT_INDICATOR","negative","remain","name","mixins","data","textareaValue","value","expanded","autoExpand","isFocus","props","type","String","cols","Number","rows","readonly","Boolean","wrap","required","placeholder","dirname","form","autofocus","disabled","maxlength","indicator","Object","computed","indicatorConf","assign","count","length","diff","watch","newValue","$emit","methods","handleFocus","e","handleBlur"],"sources":["node_modules/cube-ui/src/components/textarea/textarea.vue"],"sourcesContent":["<template>\n  <div class=\"cube-textarea-wrapper\" :class=\"{'cube-textarea_expanded': expanded, 'cube-textarea_active': isFocus}\">\n    <textarea\n      ref=\"input\"\n      class=\"cube-textarea\"\n      v-model=\"textareaValue\"\n      v-bind=\"$props\"\n      :placeholder=\"placeholder\"\n      :maxlength=\"maxlength\"\n      :disabled=\"disabled\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n      @change=\"changeHander\"\n    >\n    </textarea>\n    <span v-if=\"indicator\" v-show=\"expanded\" class=\"cube-textarea-indicator\">{{indicatorConf.remain ? remain : count}}</span>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import inputMixin from '../../common/mixins/input'\n  const COMPONENT_NAME = 'cube-textarea'\n  const EVENT_INPUT = 'input'\n\n  const DEFAULT_INDICATOR = {\n    negative: true,\n    remain: true\n  }\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [inputMixin],\n    data() {\n      return {\n        textareaValue: this.value,\n        expanded: this.autoExpand ? !!this.value : false,\n        isFocus: false\n      }\n    },\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      cols: Number,\n      rows: Number,\n      readonly: Boolean,\n      wrap: String,\n      required: Boolean,\n      placeholder: {\n        type: String,\n        default: 'please type here...'\n      },\n      dirname: String,\n      form: String,\n      name: String,\n      autofocus: Boolean,\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      maxlength: {\n        type: Number,\n        default: 60\n      },\n      indicator: {\n        type: [Boolean, Object],\n        default: true\n      },\n      autoExpand: {\n        type: Boolean,\n        default: false\n      }\n    },\n    computed: {\n      indicatorConf() {\n        let indicator = this.indicator\n        if (typeof indicator === 'boolean') {\n          indicator = {}\n        }\n        return Object.assign({}, DEFAULT_INDICATOR, indicator)\n      },\n      count() {\n        return this.textareaValue.length\n      },\n      remain() {\n        let diff = this.maxlength - this.count\n        if (!this.indicatorConf.negative && diff < 0) {\n          diff = 0\n        }\n        return diff\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.textareaValue = newValue\n      },\n      textareaValue(newValue) {\n        this.$emit(EVENT_INPUT, newValue)\n        if (!this.isFocus && this.expanded) {\n          this.expanded = false\n        }\n      }\n    },\n    methods: {\n      handleFocus(e) {\n        this.$emit('focus', e)\n        this.expanded = true\n        this.isFocus = true\n      },\n      handleBlur(e) {\n        this.$emit('blur', e)\n        if (this.textareaValue.length === 0) {\n          this.expanded = false\n        }\n        this.isFocus = false\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-textarea-wrapper\n    position: relative\n    transition: height 200ms\n    height: 40px\n    font-size: $fontsize-medium\n    line-height: 1.429\n    textarea::-webkit-input-placeholder\n      color: $textarea-placeholder-color\n      text-overflow: ellipsis\n    border-1px($textarea-border-color)\n  .cube-textarea_expanded\n    height: 80px\n  .cube-textarea_active\n    border-1px($textarea-focus-border-color)\n  .cube-textarea-indicator\n    position: absolute\n    bottom: 7px\n    right: 10px\n    color: $textarea-indicator-color\n  .cube-textarea\n    width: 100%\n    height: 100%\n    text-align: left\n    padding: 10px\n    box-sizing: border-box\n    font-size: 100%\n    line-height: inherit\n    color: $textarea-color\n    background-color: $textarea-bgc\n    border-radius: 2px\n    resize: none\n    border: none\n    outline: none\n</style>\n"],"mappings":";AAoBA,OAAAA,UAAA;AACA,IAAAC,cAAA;AACA,IAAAC,WAAA;AAEA,IAAAC,iBAAA;EACAC,QAAA;EACAC,MAAA;AACA;AAEA;EACAC,IAAA,EAAAL,cAAA;EACAM,MAAA,GAAAP,UAAA;EACAQ,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA,OAAAC,KAAA;MACAC,QAAA,OAAAC,UAAA,UAAAF,KAAA;MACAG,OAAA;IACA;EACA;EACAC,KAAA;IACAJ,KAAA;MACAK,IAAA,EAAAC,MAAA;MACA;IACA;IACAC,IAAA,EAAAC,MAAA;IACAC,IAAA,EAAAD,MAAA;IACAE,QAAA,EAAAC,OAAA;IACAC,IAAA,EAAAN,MAAA;IACAO,QAAA,EAAAF,OAAA;IACAG,WAAA;MACAT,IAAA,EAAAC,MAAA;MACA;IACA;IACAS,OAAA,EAAAT,MAAA;IACAU,IAAA,EAAAV,MAAA;IACAV,IAAA,EAAAU,MAAA;IACAW,SAAA,EAAAN,OAAA;IACAO,QAAA;MACAb,IAAA,EAAAM,OAAA;MACA;IACA;IACAQ,SAAA;MACAd,IAAA,EAAAG,MAAA;MACA;IACA;IACAY,SAAA;MACAf,IAAA,GAAAM,OAAA,EAAAU,MAAA;MACA;IACA;IACAnB,UAAA;MACAG,IAAA,EAAAM,OAAA;MACA;IACA;EACA;EACAW,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAH,SAAA,QAAAA,SAAA;MACA,WAAAA,SAAA;QACAA,SAAA;MACA;MACA,OAAAC,MAAA,CAAAG,MAAA,KAAA/B,iBAAA,EAAA2B,SAAA;IACA;IACAK,KAAA,WAAAA,MAAA;MACA,YAAA1B,aAAA,CAAA2B,MAAA;IACA;IACA/B,MAAA,WAAAA,OAAA;MACA,IAAAgC,IAAA,QAAAR,SAAA,QAAAM,KAAA;MACA,UAAAF,aAAA,CAAA7B,QAAA,IAAAiC,IAAA;QACAA,IAAA;MACA;MACA,OAAAA,IAAA;IACA;EACA;EACAC,KAAA;IACA5B,KAAA,WAAAA,MAAA6B,QAAA;MACA,KAAA9B,aAAA,GAAA8B,QAAA;IACA;IACA9B,aAAA,WAAAA,cAAA8B,QAAA;MACA,KAAAC,KAAA,CAAAtC,WAAA,EAAAqC,QAAA;MACA,UAAA1B,OAAA,SAAAF,QAAA;QACA,KAAAA,QAAA;MACA;IACA;EACA;EACA8B,OAAA;IACAC,WAAA,WAAAA,YAAAC,CAAA;MACA,KAAAH,KAAA,UAAAG,CAAA;MACA,KAAAhC,QAAA;MACA,KAAAE,OAAA;IACA;IACA+B,UAAA,WAAAA,WAAAD,CAAA;MACA,KAAAH,KAAA,SAAAG,CAAA;MACA,SAAAlC,aAAA,CAAA2B,MAAA;QACA,KAAAzB,QAAA;MACA;MACA,KAAAE,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}