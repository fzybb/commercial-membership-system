{"ast":null,"code":"import \"core-js/modules/es.array.index-of.js\";\nvar COMPONENT_NAME = 'cube-checkbox';\nvar EVENT_INPUT = 'input';\nvar EVENT_CHECKED = 'checked';\nvar EVENT_CANCLE_CHECKED = 'cancel-checked';\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: {\n      type: [Boolean, String]\n    },\n    label: {\n      type: [Boolean, String]\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    option: {\n      type: [Boolean, String, Object],\n      \"default\": function _default() {\n        return {\n          _def_option: true\n        };\n      }\n    },\n    position: {\n      type: String,\n      \"default\": 'left'\n    },\n    shape: {\n      type: String,\n      \"default\": 'circle'\n    },\n    hollowStyle: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    var parent = this.$parent;\n    var isInGroup = parent.$data._checkboxGroup;\n    var isInHorizontalGroup = isInGroup && (parent.$props.horizontal || parent.$props.colNum > 1);\n    return {\n      isInGroup: isInGroup,\n      isInHorizontalGroup: isInHorizontalGroup\n    };\n  },\n  computed: {\n    computedOption: function computedOption() {\n      var option = this.option;\n      var label = this.label;\n      var disabled = this.disabled;\n      if (option._def_option === true) {\n        option = {\n          label: label,\n          value: label,\n          disabled: disabled\n        };\n      } else if (typeof option === 'string') {\n        option = {\n          label: option,\n          value: option,\n          disabled: false\n        };\n      }\n      return option;\n    },\n    checkValue: {\n      get: function get() {\n        if (this.isInGroup) {\n          return this.$parent.value.indexOf(this.computedOption.value) > -1;\n        } else {\n          return Boolean(this.value);\n        }\n      },\n      set: function set(newValue) {\n        var value = this.computedOption.value;\n        var emitValue = value && newValue ? value : newValue;\n        this.$emit(EVENT_INPUT, emitValue);\n        if (this.isInGroup) {\n          // fix a bug when checkboxgroup set the min props\n          newValue = !this.checkValue;\n          var parentEmitEvent = newValue ? EVENT_CHECKED : EVENT_CANCLE_CHECKED;\n          this.$parent.$emit(parentEmitEvent, value || newValue);\n        }\n      }\n    },\n    _containerClass: function _containerClass() {\n      return {\n        'cube-checkbox-hollow': this.hollowStyle,\n        'cube-checkbox_checked': this.checkValue,\n        'cube-checkbox_disabled': this.computedOption.disabled,\n        'border-right-1px': this.isInHorizontalGroup\n      };\n    },\n    _wrapClass: function _wrapClass() {\n      if (this.isInGroup && !this.isInHorizontalGroup) {\n        return 'border-bottom-1px';\n      }\n    },\n    isSquare: function isSquare() {\n      return this.shape === 'square' || this.hollowStyle;\n    },\n    _borderIconClass: function _borderIconClass() {\n      return this.isSquare ? 'cubeic-square-border' : 'cubeic-round-border';\n    },\n    _rightIconClass: function _rightIconClass() {\n      return this.isSquare ? 'cubeic-square-right' : 'cubeic-right';\n    }\n  }\n};","map":{"version":3,"names":["COMPONENT_NAME","EVENT_INPUT","EVENT_CHECKED","EVENT_CANCLE_CHECKED","name","props","value","type","Boolean","String","label","disabled","option","Object","_default","_def_option","position","shape","hollowStyle","data","parent","$parent","isInGroup","$data","_checkboxGroup","isInHorizontalGroup","$props","horizontal","colNum","computed","computedOption","checkValue","get","indexOf","set","newValue","emitValue","$emit","parentEmitEvent","_containerClass","_wrapClass","isSquare","_borderIconClass","_rightIconClass"],"sources":["node_modules/cube-ui/src/components/checkbox/checkbox.vue"],"sourcesContent":["<template>\n  <div class=\"cube-checkbox\" :class=\"_containerClass\" :data-pos=\"position\">\n    <label class=\"cube-checkbox-wrap\" :class=\"_wrapClass\">\n      <input class=\"cube-checkbox-input\" type=\"checkbox\" :disabled=\"computedOption.disabled\" v-model=\"checkValue\">\n      <span class=\"cube-checkbox-ui\" :class=\"_borderIconClass\">\n        <i :class=\"_rightIconClass\"></i>\n      </span>\n      <span class=\"cube-checkbox-label\">\n        <slot>{{computedOption.label}}</slot>\n      </span>\n    </label>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  const COMPONENT_NAME = 'cube-checkbox'\n\n  const EVENT_INPUT = 'input'\n  const EVENT_CHECKED = 'checked'\n  const EVENT_CANCLE_CHECKED = 'cancel-checked'\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: {\n        type: [Boolean, String]\n      },\n      label: {\n        type: [Boolean, String]\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      option: {\n        type: [Boolean, String, Object],\n        default () {\n          return {\n            _def_option: true\n          }\n        }\n      },\n      position: {\n        type: String,\n        default: 'left'\n      },\n      shape: {\n        type: String,\n        default: 'circle'\n      },\n      hollowStyle: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      const parent = this.$parent\n      const isInGroup = parent.$data._checkboxGroup\n      const isInHorizontalGroup = isInGroup && (parent.$props.horizontal || parent.$props.colNum > 1)\n      return {\n        isInGroup,\n        isInHorizontalGroup\n      }\n    },\n    computed: {\n      computedOption() {\n        let option = this.option\n        const label = this.label\n        const disabled = this.disabled\n        if (option._def_option === true) {\n          option = {\n            label,\n            value: label,\n            disabled\n          }\n        } else if (typeof option === 'string') {\n          option = {\n            label: option,\n            value: option,\n            disabled: false\n          }\n        }\n        return option\n      },\n      checkValue: {\n        get () {\n          if (this.isInGroup) {\n            return this.$parent.value.indexOf(this.computedOption.value) > -1\n          } else {\n            return Boolean(this.value)\n          }\n        },\n        set (newValue) {\n          const value = this.computedOption.value\n          const emitValue = value && newValue ? value : newValue\n          this.$emit(EVENT_INPUT, emitValue)\n          if (this.isInGroup) {\n            // fix a bug when checkboxgroup set the min props\n            newValue = !this.checkValue\n            const parentEmitEvent = newValue ? EVENT_CHECKED : EVENT_CANCLE_CHECKED\n            this.$parent.$emit(parentEmitEvent, value || newValue)\n          }\n        }\n      },\n      _containerClass() {\n        return {\n          'cube-checkbox-hollow': this.hollowStyle,\n          'cube-checkbox_checked': this.checkValue,\n          'cube-checkbox_disabled': this.computedOption.disabled,\n          'border-right-1px': this.isInHorizontalGroup\n        }\n      },\n      _wrapClass() {\n        if (this.isInGroup && !this.isInHorizontalGroup) {\n          return 'border-bottom-1px'\n        }\n      },\n      isSquare() {\n        return this.shape === 'square' || this.hollowStyle\n      },\n      _borderIconClass() {\n        return this.isSquare ? 'cubeic-square-border' : 'cubeic-round-border'\n      },\n      _rightIconClass() {\n        return this.isSquare ? 'cubeic-square-right' : 'cubeic-right'\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  $ui-width = 1.42em\n  .cube-checkbox\n    position: relative\n    padding: 0 16px\n    text-align: left\n    font-size: 100%\n    color: $checkbox-color\n    &[data-pos=\"right\"]\n      .cube-checkbox-ui\n        margin-right: 0\n        position: absolute\n        right: 0\n      .cube-checkbox-label\n        margin-right: $ui-width\n  .cube-checkbox-wrap\n    position: relative\n    display: flex\n    align-items: center\n    box-sizing: border-box\n    width: 100%\n    height: 100%\n    padding: 11px 0\n    line-height: 1.5\n    word-break: break-word\n    word-wrap: break-word\n  .cube-checkbox-input\n    z-index: 1\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n    opacity: 0\n  .cube-checkbox-ui\n    position: relative\n    width: 1em\n    height: 1em\n    margin-right: $ui-width - 1em\n    line-height: 1\n    border-radius: 50%\n    &.cubeic-square-border\n      border-radius: 2px\n    &::before, i\n      transition: all .2s\n    &::before\n      color: $checkbox-icon-color\n      display: inline-block\n      transform: scale(1.24)\n    i\n      position: absolute\n      top: 0\n      left: 0\n      color: transparent\n      transform: scale(.4)\n  .cube-checkbox_checked\n    .cube-checkbox-ui\n      &::before\n        color: transparent\n      i\n        color: $checkbox-checked-icon-color\n        transform: scale(1.23)\n  .cube-checkbox_disabled\n    .cube-checkbox-ui\n      background-color: $checkbox-disabled-icon-bgc\n      &::before, i\n        transition: none\n      &::before\n        color: transparent\n      i\n        color: $checkbox-disabled-icon-color\n  .cube-checkbox_checked.cube-checkbox_disabled\n    .cube-checkbox-ui\n      background-color: $checkbox-checked-icon-bgc\n  .cube-checkbox-hollow\n    i\n      width: 100%\n      height: 100%\n      &::before\n        content: \"\"\n        position: absolute\n        top: 50%\n        left: 50%\n        width: 50%\n        height: 50%\n        transform: translate(-50%, -50%)\n        background-color: currentColor\n        border-radius: 2px\n    &.cube-checkbox_checked\n      .cube-checkbox-ui\n        &::before\n          color: $checkbox-hollow-checked-icon-color\n        i\n          transform: scale(1)\n          color: $checkbox-hollow-checked-icon-color\n    &.cube-checkbox_disabled\n      .cube-checkbox-ui\n        background-color: transparent\n        &::before\n          color: $checkbox-hollow-disabled-icon-color\n        i\n          transform: scale(1)\n          color: transparent\n      &.cube-checkbox_checked\n        .cube-checkbox-ui\n          i\n            color: $checkbox-hollow-disabled-icon-color\n</style>\n"],"mappings":";AAcA,IAAAA,cAAA;AAEA,IAAAC,WAAA;AACA,IAAAC,aAAA;AACA,IAAAC,oBAAA;AAEA;EACAC,IAAA,EAAAJ,cAAA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,GAAAC,OAAA,EAAAC,MAAA;IACA;IACAC,KAAA;MACAH,IAAA,GAAAC,OAAA,EAAAC,MAAA;IACA;IACAE,QAAA;MACAJ,IAAA,EAAAC,OAAA;MACA;IACA;IACAI,MAAA;MACAL,IAAA,GAAAC,OAAA,EAAAC,MAAA,EAAAI,MAAA;MAAA,oBAAAC,SAAA,EACA;QACA;UACAC,WAAA;QACA;MACA;IACA;IACAC,QAAA;MACAT,IAAA,EAAAE,MAAA;MACA;IACA;IACAQ,KAAA;MACAV,IAAA,EAAAE,MAAA;MACA;IACA;IACAS,WAAA;MACAX,IAAA,EAAAC,OAAA;MACA;IACA;EACA;EACAW,IAAA,WAAAA,KAAA;IACA,IAAAC,MAAA,QAAAC,OAAA;IACA,IAAAC,SAAA,GAAAF,MAAA,CAAAG,KAAA,CAAAC,cAAA;IACA,IAAAC,mBAAA,GAAAH,SAAA,KAAAF,MAAA,CAAAM,MAAA,CAAAC,UAAA,IAAAP,MAAA,CAAAM,MAAA,CAAAE,MAAA;IACA;MACAN,SAAA,EAAAA,SAAA;MACAG,mBAAA,EAAAA;IACA;EACA;EACAI,QAAA;IACAC,cAAA,WAAAA,eAAA;MACA,IAAAlB,MAAA,QAAAA,MAAA;MACA,IAAAF,KAAA,QAAAA,KAAA;MACA,IAAAC,QAAA,QAAAA,QAAA;MACA,IAAAC,MAAA,CAAAG,WAAA;QACAH,MAAA;UACAF,KAAA,EAAAA,KAAA;UACAJ,KAAA,EAAAI,KAAA;UACAC,QAAA,EAAAA;QACA;MACA,kBAAAC,MAAA;QACAA,MAAA;UACAF,KAAA,EAAAE,MAAA;UACAN,KAAA,EAAAM,MAAA;UACAD,QAAA;QACA;MACA;MACA,OAAAC,MAAA;IACA;IACAmB,UAAA;MACAC,GAAA,WAAAA,IAAA;QACA,SAAAV,SAAA;UACA,YAAAD,OAAA,CAAAf,KAAA,CAAA2B,OAAA,MAAAH,cAAA,CAAAxB,KAAA;QACA;UACA,OAAAE,OAAA,MAAAF,KAAA;QACA;MACA;MACA4B,GAAA,WAAAA,IAAAC,QAAA;QACA,IAAA7B,KAAA,QAAAwB,cAAA,CAAAxB,KAAA;QACA,IAAA8B,SAAA,GAAA9B,KAAA,IAAA6B,QAAA,GAAA7B,KAAA,GAAA6B,QAAA;QACA,KAAAE,KAAA,CAAApC,WAAA,EAAAmC,SAAA;QACA,SAAAd,SAAA;UACA;UACAa,QAAA,SAAAJ,UAAA;UACA,IAAAO,eAAA,GAAAH,QAAA,GAAAjC,aAAA,GAAAC,oBAAA;UACA,KAAAkB,OAAA,CAAAgB,KAAA,CAAAC,eAAA,EAAAhC,KAAA,IAAA6B,QAAA;QACA;MACA;IACA;IACAI,eAAA,WAAAA,gBAAA;MACA;QACA,6BAAArB,WAAA;QACA,8BAAAa,UAAA;QACA,+BAAAD,cAAA,CAAAnB,QAAA;QACA,yBAAAc;MACA;IACA;IACAe,UAAA,WAAAA,WAAA;MACA,SAAAlB,SAAA,UAAAG,mBAAA;QACA;MACA;IACA;IACAgB,QAAA,WAAAA,SAAA;MACA,YAAAxB,KAAA,sBAAAC,WAAA;IACA;IACAwB,gBAAA,WAAAA,iBAAA;MACA,YAAAD,QAAA;IACA;IACAE,eAAA,WAAAA,gBAAA;MACA,YAAAF,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}