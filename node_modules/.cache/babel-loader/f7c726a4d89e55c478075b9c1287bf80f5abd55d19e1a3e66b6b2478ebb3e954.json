{"ast":null,"code":"import \"C:\\\\Users\\\\fu_71\\\\OneDrive\\\\Desktop\\\\fitness\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"C:\\\\Users\\\\fu_71\\\\OneDrive\\\\Desktop\\\\fitness\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"C:\\\\Users\\\\fu_71\\\\OneDrive\\\\Desktop\\\\fitness\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"C:\\\\Users\\\\fu_71\\\\OneDrive\\\\Desktop\\\\fitness\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport './cube-ui';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nVue.config.productionTip = false;\n\n//路由拦截，拦截全部路由，每次操作路由都是被拦截进行判断\n\nrouter.beforeEach(function (to, from, next) {\n  var token = localStorage.getItem(\"token\");\n  //筛选需要传token的路由，匹配route里面需要登录的路径，如果匹配到就是true\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    //根据token是否有，判断是否需要调到登录页面\n    if (token) {\n      next();\n    } else {\n      next({\n        path: '/login'\n      });\n    }\n  } else {\n    next();\n  }\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","config","productionTip","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record","meta","requiresAuth","path","render","h","$mount"],"sources":["C:/Users/fu_71/OneDrive/Desktop/fitness/frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport './cube-ui'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\nVue.config.productionTip = false\n\n//路由拦截，拦截全部路由，每次操作路由都是被拦截进行判断\n\nrouter.beforeEach((to,from,next)=>{\n  const token = localStorage.getItem(\"token\");\n  //筛选需要传token的路由，匹配route里面需要登录的路径，如果匹配到就是true\n  if( to.matched.some(record => record.meta.requiresAuth) ){\n    //根据token是否有，判断是否需要调到登录页面\n    if(token){\n      next()\n    }else{\n      next({path:'/login'})\n    }\n  }else{\n    next();\n  }\n})\n\n\n\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":";;;;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAE3BH,GAAG,CAACI,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;;AAEAH,MAAM,CAACI,UAAU,CAAC,UAACC,EAAE,EAACC,IAAI,EAACC,IAAI,EAAG;EAChC,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACC,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD;IACA,IAAGP,KAAK,EAAC;MACPD,IAAI,CAAC,CAAC;IACR,CAAC,MAAI;MACHA,IAAI,CAAC;QAACS,IAAI,EAAC;MAAQ,CAAC,CAAC;IACvB;EACF,CAAC,MAAI;IACHT,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAKF,IAAIT,GAAG,CAAC;EACNE,MAAM,EAANA,MAAM;EACNC,KAAK,EAALA,KAAK;EACLgB,MAAM,EAAE,SAAAA,OAAAC,CAAC;IAAA,OAAIA,CAAC,CAACnB,GAAG,CAAC;EAAA;AACrB,CAAC,CAAC,CAACoB,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}