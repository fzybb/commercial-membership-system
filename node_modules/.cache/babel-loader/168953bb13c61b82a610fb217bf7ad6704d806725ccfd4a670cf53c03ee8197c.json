{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport visibilityMixin from '../../common/mixins/visibility';\nvar COMPONENT_NAME = 'cube-tip';\nvar EVENT_CLICK = 'click';\nvar EVENT_CLOSE = 'close';\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin],\n  props: {\n    direction: {\n      type: String,\n      \"default\": 'top'\n    },\n    offsetLeft: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    offsetRight: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    offsetTop: {\n      type: [String, Number],\n      \"default\": 0\n    },\n    offsetBottom: {\n      type: [String, Number],\n      \"default\": 0\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      var angleEleStyle = _this.$refs.angle.style;\n      var boxMap = {\n        left: 'right',\n        right: 'left',\n        top: 'bottom',\n        bottom: 'top'\n      };\n      var offsets = [{\n        name: 'offsetLeft',\n        target: 'left',\n        percentFix: {\n          marginLeft: '-6px'\n        }\n      }, {\n        name: 'offsetRight',\n        target: 'right',\n        percentFix: {\n          marginRight: '-6px'\n        }\n      }, {\n        name: 'offsetTop',\n        target: 'top',\n        percentFix: {\n          marginTop: '-6px'\n        }\n      }, {\n        name: 'offsetBottom',\n        target: 'bottom',\n        percentFix: {\n          marginBottom: '-6px'\n        }\n      }];\n      offsets.forEach(function (offset) {\n        var value = _this[offset.name];\n        if (value !== 0) {\n          var isNum = typeof value === 'number';\n          angleEleStyle[offset.target] = value + (isNum ? 'px' : '');\n          if (offset.percentFix && !isNum) {\n            Object.keys(offset.percentFix).forEach(function (key) {\n              angleEleStyle[key] = offset.percentFix[key];\n            });\n          }\n          angleEleStyle[boxMap[offset.target]] = 'auto';\n        }\n      });\n    });\n  },\n  methods: {\n    handleClick: function handleClick() {\n      this.hide();\n      this.$emit(EVENT_CLICK);\n    },\n    close: function close() {\n      this.hide();\n      this.$emit(EVENT_CLOSE);\n    }\n  }\n};","map":{"version":3,"names":["visibilityMixin","COMPONENT_NAME","EVENT_CLICK","EVENT_CLOSE","name","mixins","props","direction","type","String","offsetLeft","Number","offsetRight","offsetTop","offsetBottom","mounted","_this","$nextTick","angleEleStyle","$refs","angle","style","boxMap","left","right","top","bottom","offsets","target","percentFix","marginLeft","marginRight","marginTop","marginBottom","forEach","offset","value","isNum","Object","keys","key","methods","handleClick","hide","$emit","close"],"sources":["node_modules/cube-ui/src/components/tip/tip.vue"],"sourcesContent":["<template>\n  <transition name=\"cube-tip-zoom\">\n    <div class=\"cube-tip\" :data-dir=\"direction\" v-show=\"isVisible\" @click=\"handleClick\">\n      <i class=\"cube-tip-angle\" ref=\"angle\"></i>\n      <button class=\"cube-tip-close cubeic-close\" @click.stop=\"close\"></button>\n      <div class=\"cube-tip-content\">\n        <slot></slot>\n      </div>\n    </div>\n  </transition>\n</template>\n<script type=\"text/ecmascript-6\">\n  import visibilityMixin from '../../common/mixins/visibility'\n\n  const COMPONENT_NAME = 'cube-tip'\n  const EVENT_CLICK = 'click'\n  const EVENT_CLOSE = 'close'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin],\n    props: {\n      direction: {\n        type: String,\n        default: 'top'\n      },\n      offsetLeft: {\n        type: [String, Number],\n        default: 0\n      },\n      offsetRight: {\n        type: [String, Number],\n        default: 0\n      },\n      offsetTop: {\n        type: [String, Number],\n        default: 0\n      },\n      offsetBottom: {\n        type: [String, Number],\n        default: 0\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        let angleEleStyle = this.$refs.angle.style\n        const boxMap = {\n          left: 'right',\n          right: 'left',\n          top: 'bottom',\n          bottom: 'top'\n        }\n        const offsets = [\n          {\n            name: 'offsetLeft',\n            target: 'left',\n            percentFix: {\n              marginLeft: '-6px'\n            }\n          },\n          {\n            name: 'offsetRight',\n            target: 'right',\n            percentFix: {\n              marginRight: '-6px'\n            }\n          },\n          {\n            name: 'offsetTop',\n            target: 'top',\n            percentFix: {\n              marginTop: '-6px'\n            }\n          },\n          {\n            name: 'offsetBottom',\n            target: 'bottom',\n            percentFix: {\n              marginBottom: '-6px'\n            }\n          }\n        ]\n        offsets.forEach((offset) => {\n          const value = this[offset.name]\n          if (value !== 0) {\n            const isNum = typeof value === 'number'\n            angleEleStyle[offset.target] = value + (isNum ? 'px' : '')\n            if (offset.percentFix && !isNum) {\n              Object.keys(offset.percentFix).forEach((key) => {\n                angleEleStyle[key] = offset.percentFix[key]\n              })\n            }\n            angleEleStyle[boxMap[offset.target]] = 'auto'\n          }\n        })\n      })\n    },\n    methods: {\n      handleClick() {\n        this.hide()\n        this.$emit(EVENT_CLICK)\n      },\n      close() {\n        this.hide()\n        this.$emit(EVENT_CLOSE)\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-tip\n    display: flex\n    z-index: 10\n    position: absolute\n    padding: 10px 38px 10px 16px\n    max-height: 60px\n    font-size: $fontsize-small\n    color: $tip-color\n    background: $tip-bgc\n    border-radius: 2px\n    transition: opacity .2s\n    &[data-dir=\"top\"], &[data-dir=\"bottom\"]\n      .cube-tip-angle\n        left: 50%\n        transform: translateX(-50%)\n    &[data-dir=\"top\"]\n      .cube-tip-angle\n        top: 0\n        &::before\n          margin-top: -6px\n          transform: rotate(0deg)\n    &[data-dir=\"bottom\"]\n      .cube-tip-angle\n        bottom: 0\n        &::before\n          margin-bottom: -6px\n          transform: rotate(180deg)\n    &[data-dir=\"left\"], &[data-dir=\"right\"]\n      .cube-tip-angle\n        top: 50%\n        transform: translateY(-50%)\n    &[data-dir=\"left\"]\n      .cube-tip-angle\n        left: 0\n        &::before\n          margin-left: -9px\n          transform: rotate(-90deg)\n    &[data-dir=\"right\"]\n      .cube-tip-angle\n        right: 0\n        &::before\n          margin-right: -9px\n          transform: rotate(90deg)\n  .cube-tip-angle\n    position: absolute\n    &::before\n      content: \"\"\n      display: block\n      border-width: 0 6px 6px\n      border-style: solid\n      border-color: transparent transparent $tip-bgc\n  .cube-tip-close\n    position: absolute\n    right: 14px\n    top: 12px\n    width: 12px\n    height: 12px\n    padding: 0\n    color: inherit\n    outline: none\n    border: none\n    background: none\n    transform: scale(1.3)\n  .cube-tip-content\n    min-height: 18px\n    line-height: 18px\n    flex-fix()\n    overflow: hidden\n\n  .cube-tip-zoom-enter-active\n    animation: tip-in .4s\n\n  .cube-tip-zoom-leave-active\n    animation: tip-out .2s\n\n  @keyframes tip-in\n    0%\n      transform: scale(0)\n    50%\n      transform: scale(1.1)\n    100%\n      transform: scale(1)\n\n  @keyframes tip-out\n    from\n      transform: scale(1)\n      opacity: 1\n    to\n      transform: scale(0)\n      opacity: 0\n</style>\n"],"mappings":";;;;;;AAYA,OAAAA,eAAA;AAEA,IAAAC,cAAA;AACA,IAAAC,WAAA;AACA,IAAAC,WAAA;AAEA;EACAC,IAAA,EAAAH,cAAA;EACAI,MAAA,GAAAL,eAAA;EACAM,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACA;IACA;IACAC,UAAA;MACAF,IAAA,GAAAC,MAAA,EAAAE,MAAA;MACA;IACA;IACAC,WAAA;MACAJ,IAAA,GAAAC,MAAA,EAAAE,MAAA;MACA;IACA;IACAE,SAAA;MACAL,IAAA,GAAAC,MAAA,EAAAE,MAAA;MACA;IACA;IACAG,YAAA;MACAN,IAAA,GAAAC,MAAA,EAAAE,MAAA;MACA;IACA;EACA;EACAI,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,SAAA;MACA,IAAAC,aAAA,GAAAF,KAAA,CAAAG,KAAA,CAAAC,KAAA,CAAAC,KAAA;MACA,IAAAC,MAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;QACAC,MAAA;MACA;MACA,IAAAC,OAAA,IACA;QACAvB,IAAA;QACAwB,MAAA;QACAC,UAAA;UACAC,UAAA;QACA;MACA,GACA;QACA1B,IAAA;QACAwB,MAAA;QACAC,UAAA;UACAE,WAAA;QACA;MACA,GACA;QACA3B,IAAA;QACAwB,MAAA;QACAC,UAAA;UACAG,SAAA;QACA;MACA,GACA;QACA5B,IAAA;QACAwB,MAAA;QACAC,UAAA;UACAI,YAAA;QACA;MACA,EACA;MACAN,OAAA,CAAAO,OAAA,WAAAC,MAAA;QACA,IAAAC,KAAA,GAAApB,KAAA,CAAAmB,MAAA,CAAA/B,IAAA;QACA,IAAAgC,KAAA;UACA,IAAAC,KAAA,UAAAD,KAAA;UACAlB,aAAA,CAAAiB,MAAA,CAAAP,MAAA,IAAAQ,KAAA,IAAAC,KAAA;UACA,IAAAF,MAAA,CAAAN,UAAA,KAAAQ,KAAA;YACAC,MAAA,CAAAC,IAAA,CAAAJ,MAAA,CAAAN,UAAA,EAAAK,OAAA,WAAAM,GAAA;cACAtB,aAAA,CAAAsB,GAAA,IAAAL,MAAA,CAAAN,UAAA,CAAAW,GAAA;YACA;UACA;UACAtB,aAAA,CAAAI,MAAA,CAAAa,MAAA,CAAAP,MAAA;QACA;MACA;IACA;EACA;EACAa,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAC,IAAA;MACA,KAAAC,KAAA,CAAA1C,WAAA;IACA;IACA2C,KAAA,WAAAA,MAAA;MACA,KAAAF,IAAA;MACA,KAAAC,KAAA,CAAAzC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}