{"ast":null,"code":"import \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { evalOpts, STATUS_SUCCESS, STATUS_UPLOADING, STATUS_ERROR } from './util';\nexport default function ajaxUpload(file, options, changeHandler) {\n  var target = options.target,\n    _options$headers = options.headers,\n    headers = _options$headers === void 0 ? {} : _options$headers,\n    _options$data = options.data,\n    data = _options$data === void 0 ? {} : _options$data,\n    _options$fileName = options.fileName,\n    fileName = _options$fileName === void 0 ? 'file' : _options$fileName,\n    withCredentials = options.withCredentials,\n    timeout = options.timeout,\n    _options$prop = options.prop,\n    prop = _options$prop === void 0 ? 'file' : _options$prop,\n    _options$progressInte = options.progressInterval,\n    progressInterval = _options$progressInte === void 0 ? 100 : _options$progressInte,\n    _options$checkSuccess = options.checkSuccess,\n    checkSuccess = _options$checkSuccess === void 0 ? function () {\n      return true;\n    } : _options$checkSuccess;\n  var realTarget = evalOpts(target, file);\n  file.progress = 0;\n  file.status = STATUS_UPLOADING;\n  var xhr = new window.XMLHttpRequest();\n  file._xhr = xhr;\n  var progressTid = 0;\n  if (xhr.upload) {\n    var lastProgressTime = Date.now();\n    xhr.upload.onprogress = function (e) {\n      if (e.total > 0) {\n        if (progressTid) {\n          clearTimeout(progressTid);\n          var now = Date.now();\n          var diff = now - lastProgressTime;\n          if (diff >= progressInterval) {\n            computed();\n          } else {\n            progressTid = setTimeout(computed, diff);\n          }\n        } else {\n          // first time\n          computed();\n          progressTid = 1;\n        }\n      }\n      function computed() {\n        file.progress = e.loaded / e.total;\n        lastProgressTime = Date.now();\n      }\n    };\n  }\n  var formData = new window.FormData();\n  var realData = evalOpts(data, file);\n  Object.keys(realData).forEach(function (key) {\n    formData.append(key, realData[key]);\n  });\n  formData.append(fileName, file[prop]);\n  xhr.onload = function () {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      setStatus(STATUS_ERROR);\n      return;\n    }\n    setResponse();\n    var response = file.response;\n    if (checkSuccess.length <= 2) {\n      var isSuccess = checkSuccess(response, file);\n      setStatus(isSuccess ? STATUS_SUCCESS : STATUS_ERROR);\n    } else {\n      // callback\n      checkSuccess(response, file, function (isSuccess) {\n        setStatus(isSuccess ? STATUS_SUCCESS : STATUS_ERROR);\n      });\n    }\n  };\n  xhr.onerror = function () {\n    setResponse();\n    setStatus(STATUS_ERROR);\n  };\n  xhr.ontimeout = function () {\n    setResponse();\n    setStatus(STATUS_ERROR);\n  };\n  xhr.open('POST', realTarget, true);\n  if (withCredentials) {\n    xhr.withCredentials = true;\n  }\n  var realHeaders = evalOpts(headers, file);\n  Object.keys(realHeaders).forEach(function (key) {\n    xhr.setRequestHeader(key, realHeaders[key]);\n  });\n  if (timeout > 0) {\n    xhr.timeout = timeout;\n  }\n  xhr.send(formData);\n  function setStatus(status) {\n    clearTimeout(progressTid);\n    progressTid = 0;\n    file.progress = 1;\n    file.status = status;\n    changeHandler && changeHandler(file);\n  }\n  function setResponse() {\n    var response = xhr.responseText || xhr.response;\n    try {\n      response = JSON.parse(response);\n    } catch (e) {}\n    file.response = response;\n    file.responseHeaders = xhr.getAllResponseHeaders();\n  }\n}","map":{"version":3,"names":["evalOpts","STATUS_SUCCESS","STATUS_UPLOADING","STATUS_ERROR","ajaxUpload","file","options","changeHandler","target","_options$headers","headers","_options$data","data","_options$fileName","fileName","withCredentials","timeout","_options$prop","prop","_options$progressInte","progressInterval","_options$checkSuccess","checkSuccess","realTarget","progress","status","xhr","window","XMLHttpRequest","_xhr","progressTid","upload","lastProgressTime","Date","now","onprogress","e","total","clearTimeout","diff","computed","setTimeout","loaded","formData","FormData","realData","Object","keys","forEach","key","append","onload","setStatus","setResponse","response","length","isSuccess","onerror","ontimeout","open","realHeaders","setRequestHeader","send","responseText","JSON","parse","responseHeaders","getAllResponseHeaders"],"sources":["C:/Users/fu_71/OneDrive/Desktop/fitness/frontend/node_modules/cube-ui/src/components/upload/ajax.js"],"sourcesContent":["import {\n  evalOpts,\n  STATUS_SUCCESS,\n  STATUS_UPLOADING,\n  STATUS_ERROR\n} from './util'\n\nexport default function ajaxUpload(file, options, changeHandler) {\n  const {\n    target,\n    headers = {},\n    data = {},\n    fileName = 'file',\n    withCredentials,\n    timeout,\n    prop = 'file',\n    progressInterval = 100,\n    checkSuccess = function () { return true }\n  } = options\n\n  const realTarget = evalOpts(target, file)\n\n  file.progress = 0\n  file.status = STATUS_UPLOADING\n\n  const xhr = new window.XMLHttpRequest()\n  file._xhr = xhr\n  let progressTid = 0\n  if (xhr.upload) {\n    let lastProgressTime = Date.now()\n    xhr.upload.onprogress = function (e) {\n      if (e.total > 0) {\n        if (progressTid) {\n          clearTimeout(progressTid)\n          const now = Date.now()\n          const diff = now - lastProgressTime\n          if (diff >= progressInterval) {\n            computed()\n          } else {\n            progressTid = setTimeout(computed, diff)\n          }\n        } else {\n          // first time\n          computed()\n          progressTid = 1\n        }\n      }\n      function computed() {\n        file.progress = e.loaded / e.total\n        lastProgressTime = Date.now()\n      }\n    }\n  }\n\n  const formData = new window.FormData()\n  const realData = evalOpts(data, file)\n  Object.keys(realData).forEach((key) => {\n    formData.append(key, realData[key])\n  })\n  formData.append(fileName, file[prop])\n\n  xhr.onload = function () {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      setStatus(STATUS_ERROR)\n      return\n    }\n    setResponse()\n    const response = file.response\n\n    if (checkSuccess.length <= 2) {\n      const isSuccess = checkSuccess(response, file)\n      setStatus(isSuccess ? STATUS_SUCCESS : STATUS_ERROR)\n    } else {\n      // callback\n      checkSuccess(response, file, (isSuccess) => {\n        setStatus(isSuccess ? STATUS_SUCCESS : STATUS_ERROR)\n      })\n    }\n  }\n  xhr.onerror = function () {\n    setResponse()\n    setStatus(STATUS_ERROR)\n  }\n  xhr.ontimeout = function () {\n    setResponse()\n    setStatus(STATUS_ERROR)\n  }\n\n  xhr.open('POST', realTarget, true)\n  if (withCredentials) {\n    xhr.withCredentials = true\n  }\n  const realHeaders = evalOpts(headers, file)\n  Object.keys(realHeaders).forEach((key) => {\n    xhr.setRequestHeader(key, realHeaders[key])\n  })\n  if (timeout > 0) {\n    xhr.timeout = timeout\n  }\n\n  xhr.send(formData)\n  function setStatus(status) {\n    clearTimeout(progressTid)\n    progressTid = 0\n    file.progress = 1\n    file.status = status\n    changeHandler && changeHandler(file)\n  }\n  function setResponse() {\n    let response = xhr.responseText || xhr.response\n    try {\n      response = JSON.parse(response)\n    } catch (e) {}\n    file.response = response\n    file.responseHeaders = xhr.getAllResponseHeaders()\n  }\n}\n"],"mappings":";;;;;;;AAAA,SACEA,QAAQ,EACRC,cAAc,EACdC,gBAAgB,EAChBC,YAAY,QACP,QAAQ;AAEf,eAAe,SAASC,UAAUA,CAACC,IAAI,EAAEC,OAAO,EAAEC,aAAa,EAAE;EAC/D,IACEC,MAAM,GASJF,OAAO,CATTE,MAAM;IAAAC,gBAAA,GASJH,OAAO,CARTI,OAAO;IAAPA,OAAO,GAAAD,gBAAA,cAAG,CAAC,CAAC,GAAAA,gBAAA;IAAAE,aAAA,GAQVL,OAAO,CAPTM,IAAI;IAAJA,IAAI,GAAAD,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;IAAAE,iBAAA,GAOPP,OAAO,CANTQ,QAAQ;IAARA,QAAQ,GAAAD,iBAAA,cAAG,MAAM,GAAAA,iBAAA;IACjBE,eAAe,GAKbT,OAAO,CALTS,eAAe;IACfC,OAAO,GAILV,OAAO,CAJTU,OAAO;IAAAC,aAAA,GAILX,OAAO,CAHTY,IAAI;IAAJA,IAAI,GAAAD,aAAA,cAAG,MAAM,GAAAA,aAAA;IAAAE,qBAAA,GAGXb,OAAO,CAFTc,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;IAAAE,qBAAA,GAEpBf,OAAO,CADTgB,YAAY;IAAZA,YAAY,GAAAD,qBAAA,cAAG,YAAY;MAAE,OAAO,IAAI;IAAC,CAAC,GAAAA,qBAAA;EAG5C,IAAME,UAAU,GAAGvB,QAAQ,CAACQ,MAAM,EAAEH,IAAI,CAAC;EAEzCA,IAAI,CAACmB,QAAQ,GAAG,CAAC;EACjBnB,IAAI,CAACoB,MAAM,GAAGvB,gBAAgB;EAE9B,IAAMwB,GAAG,GAAG,IAAIC,MAAM,CAACC,cAAc,CAAC,CAAC;EACvCvB,IAAI,CAACwB,IAAI,GAAGH,GAAG;EACf,IAAII,WAAW,GAAG,CAAC;EACnB,IAAIJ,GAAG,CAACK,MAAM,EAAE;IACd,IAAIC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACjCR,GAAG,CAACK,MAAM,CAACI,UAAU,GAAG,UAAUC,CAAC,EAAE;MACnC,IAAIA,CAAC,CAACC,KAAK,GAAG,CAAC,EAAE;QACf,IAAIP,WAAW,EAAE;UACfQ,YAAY,CAACR,WAAW,CAAC;UACzB,IAAMI,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;UACtB,IAAMK,IAAI,GAAGL,GAAG,GAAGF,gBAAgB;UACnC,IAAIO,IAAI,IAAInB,gBAAgB,EAAE;YAC5BoB,QAAQ,CAAC,CAAC;UACZ,CAAC,MAAM;YACLV,WAAW,GAAGW,UAAU,CAACD,QAAQ,EAAED,IAAI,CAAC;UAC1C;QACF,CAAC,MAAM;UACL;UACAC,QAAQ,CAAC,CAAC;UACVV,WAAW,GAAG,CAAC;QACjB;MACF;MACA,SAASU,QAAQA,CAAA,EAAG;QAClBnC,IAAI,CAACmB,QAAQ,GAAGY,CAAC,CAACM,MAAM,GAAGN,CAAC,CAACC,KAAK;QAClCL,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC/B;IACF,CAAC;EACH;EAEA,IAAMS,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAQ,CAAC,CAAC;EACtC,IAAMC,QAAQ,GAAG7C,QAAQ,CAACY,IAAI,EAAEP,IAAI,CAAC;EACrCyC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACG,OAAO,CAAC,UAACC,GAAG,EAAK;IACrCN,QAAQ,CAACO,MAAM,CAACD,GAAG,EAAEJ,QAAQ,CAACI,GAAG,CAAC,CAAC;EACrC,CAAC,CAAC;EACFN,QAAQ,CAACO,MAAM,CAACpC,QAAQ,EAAET,IAAI,CAACa,IAAI,CAAC,CAAC;EAErCQ,GAAG,CAACyB,MAAM,GAAG,YAAY;IACvB,IAAIzB,GAAG,CAACD,MAAM,GAAG,GAAG,IAAIC,GAAG,CAACD,MAAM,IAAI,GAAG,EAAE;MACzC2B,SAAS,CAACjD,YAAY,CAAC;MACvB;IACF;IACAkD,WAAW,CAAC,CAAC;IACb,IAAMC,QAAQ,GAAGjD,IAAI,CAACiD,QAAQ;IAE9B,IAAIhC,YAAY,CAACiC,MAAM,IAAI,CAAC,EAAE;MAC5B,IAAMC,SAAS,GAAGlC,YAAY,CAACgC,QAAQ,EAAEjD,IAAI,CAAC;MAC9C+C,SAAS,CAACI,SAAS,GAAGvD,cAAc,GAAGE,YAAY,CAAC;IACtD,CAAC,MAAM;MACL;MACAmB,YAAY,CAACgC,QAAQ,EAAEjD,IAAI,EAAE,UAACmD,SAAS,EAAK;QAC1CJ,SAAS,CAACI,SAAS,GAAGvD,cAAc,GAAGE,YAAY,CAAC;MACtD,CAAC,CAAC;IACJ;EACF,CAAC;EACDuB,GAAG,CAAC+B,OAAO,GAAG,YAAY;IACxBJ,WAAW,CAAC,CAAC;IACbD,SAAS,CAACjD,YAAY,CAAC;EACzB,CAAC;EACDuB,GAAG,CAACgC,SAAS,GAAG,YAAY;IAC1BL,WAAW,CAAC,CAAC;IACbD,SAAS,CAACjD,YAAY,CAAC;EACzB,CAAC;EAEDuB,GAAG,CAACiC,IAAI,CAAC,MAAM,EAAEpC,UAAU,EAAE,IAAI,CAAC;EAClC,IAAIR,eAAe,EAAE;IACnBW,GAAG,CAACX,eAAe,GAAG,IAAI;EAC5B;EACA,IAAM6C,WAAW,GAAG5D,QAAQ,CAACU,OAAO,EAAEL,IAAI,CAAC;EAC3CyC,MAAM,CAACC,IAAI,CAACa,WAAW,CAAC,CAACZ,OAAO,CAAC,UAACC,GAAG,EAAK;IACxCvB,GAAG,CAACmC,gBAAgB,CAACZ,GAAG,EAAEW,WAAW,CAACX,GAAG,CAAC,CAAC;EAC7C,CAAC,CAAC;EACF,IAAIjC,OAAO,GAAG,CAAC,EAAE;IACfU,GAAG,CAACV,OAAO,GAAGA,OAAO;EACvB;EAEAU,GAAG,CAACoC,IAAI,CAACnB,QAAQ,CAAC;EAClB,SAASS,SAASA,CAAC3B,MAAM,EAAE;IACzBa,YAAY,CAACR,WAAW,CAAC;IACzBA,WAAW,GAAG,CAAC;IACfzB,IAAI,CAACmB,QAAQ,GAAG,CAAC;IACjBnB,IAAI,CAACoB,MAAM,GAAGA,MAAM;IACpBlB,aAAa,IAAIA,aAAa,CAACF,IAAI,CAAC;EACtC;EACA,SAASgD,WAAWA,CAAA,EAAG;IACrB,IAAIC,QAAQ,GAAG5B,GAAG,CAACqC,YAAY,IAAIrC,GAAG,CAAC4B,QAAQ;IAC/C,IAAI;MACFA,QAAQ,GAAGU,IAAI,CAACC,KAAK,CAACX,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOlB,CAAC,EAAE,CAAC;IACb/B,IAAI,CAACiD,QAAQ,GAAGA,QAAQ;IACxBjD,IAAI,CAAC6D,eAAe,GAAGxC,GAAG,CAACyC,qBAAqB,CAAC,CAAC;EACpD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}