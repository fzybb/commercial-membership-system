{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport visibilityMixin from '../../common/mixins/visibility';\nimport CubeScroll from '../scroll/scroll.vue';\nimport CubeDrawerItem from './drawer-item.vue';\nvar COMPONENT_NAME = 'cube-drawer-panel';\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin],\n  props: {\n    data: {\n      type: Array,\n      \"default\": function _default() {\n        /* istanbul ignore next */\n        return [];\n      }\n    },\n    index: {\n      type: Number,\n      \"default\": -1\n    }\n  },\n  computed: {\n    selectedIndex: function selectedIndex() {\n      var selectedIndex = this.$parent.selected[this.index];\n      return selectedIndex === undefined ? -1 : selectedIndex;\n    }\n  },\n  watch: {\n    data: function data() {\n      this.scrollToTop();\n    },\n    isVisible: function isVisible() {\n      var _this = this;\n      this.$nextTick(function () {\n        _this.refresh();\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.$parent.addPanel(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$parent.removePanel(this);\n  },\n  methods: {\n    refresh: function refresh() {\n      this.$refs.scroll.refresh();\n    },\n    scrollToTop: function scrollToTop() {\n      this.$refs.scroll.scroll && this.$refs.scroll.scroll.scrollTo(0, 0, 0);\n    },\n    itemClickHandler: function itemClickHandler(item, index) {\n      if (this.selectedIndex !== index) {\n        this.$parent.changeHandler(this.index, item, index);\n      }\n    }\n  },\n  components: {\n    CubeScroll: CubeScroll,\n    CubeDrawerItem: CubeDrawerItem\n  }\n};","map":{"version":3,"names":["visibilityMixin","CubeScroll","CubeDrawerItem","COMPONENT_NAME","name","mixins","props","data","type","Array","_default","index","Number","computed","selectedIndex","$parent","selected","undefined","watch","scrollToTop","isVisible","_this","$nextTick","refresh","mounted","addPanel","beforeDestroy","removePanel","methods","$refs","scroll","scrollTo","itemClickHandler","item","changeHandler","components"],"sources":["node_modules/cube-ui/src/components/drawer/drawer-panel.vue"],"sourcesContent":["<template>\n  <transition name=\"cube-drawer-move\">\n    <div class=\"cube-drawer-panel\" v-show=\"isVisible\">\n      <div class=\"cube-drawer-scroll-wrapper\">\n        <cube-scroll ref=\"scroll\" :data=\"data\">\n          <ul class=\"cube-drawer-list\">\n            <slot>\n              <cube-drawer-item v-for=\"(item, i) in data\" :item=\"item\" :key=\"i\" :index=\"i\" />\n            </slot>\n          </ul>\n        </cube-scroll>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import visibilityMixin from '../../common/mixins/visibility'\n  import CubeScroll from '../scroll/scroll.vue'\n  import CubeDrawerItem from './drawer-item.vue'\n\n  const COMPONENT_NAME = 'cube-drawer-panel'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin],\n    props: {\n      data: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      index: {\n        type: Number,\n        default: -1\n      }\n    },\n    computed: {\n      selectedIndex() {\n        const selectedIndex = this.$parent.selected[this.index]\n        return selectedIndex === undefined ? -1 : selectedIndex\n      }\n    },\n    watch: {\n      data() {\n        this.scrollToTop()\n      },\n      isVisible() {\n        this.$nextTick(() => {\n          this.refresh()\n        })\n      }\n    },\n    mounted() {\n      this.$parent.addPanel(this)\n    },\n    beforeDestroy() {\n      this.$parent.removePanel(this)\n    },\n    methods: {\n      refresh() {\n        this.$refs.scroll.refresh()\n      },\n      scrollToTop() {\n        this.$refs.scroll.scroll && this.$refs.scroll.scroll.scrollTo(0, 0, 0)\n      },\n      itemClickHandler(item, index) {\n        if (this.selectedIndex !== index) {\n          this.$parent.changeHandler(this.index, item, index)\n        }\n      }\n    },\n    components: {\n      CubeScroll,\n      CubeDrawerItem\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-drawer-panel\n    position: relative\n    z-index: 1\n    flex: 1\n    width: 170px\n    overflow: hidden\n    background-color: $drawer-panel-bgc\n    box-shadow: 0 1px 2px rgba(0, 0, 0, .2)\n    + .cube-drawer-panel\n      margin-left: -67px\n    &:first-child\n      box-shadow: none\n  .cube-drawer-scroll-wrapper // fix flex item height: 100% bug in android\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n\n  .cube-drawer-move-enter, .cube-drawer-move-leave-to\n    transform: translate(67px, 0)\n  .cube-drawer-move-enter-active, .cube-drawer-move-leave-active\n    transition: transform .3s ease-in-out\n</style>\n"],"mappings":";AAiBA,OAAAA,eAAA;AACA,OAAAC,UAAA;AACA,OAAAC,cAAA;AAEA,IAAAC,cAAA;AAEA;EACAC,IAAA,EAAAD,cAAA;EACAE,MAAA,GAAAL,eAAA;EACAM,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA,EACA;QACA;QACA;MACA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAA,aAAA,QAAAC,OAAA,CAAAC,QAAA,MAAAL,KAAA;MACA,OAAAG,aAAA,KAAAG,SAAA,QAAAH,aAAA;IACA;EACA;EACAI,KAAA;IACAX,IAAA,WAAAA,KAAA;MACA,KAAAY,WAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,SAAA;QACAD,KAAA,CAAAE,OAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAT,OAAA,CAAAU,QAAA;EACA;EACAC,aAAA,WAAAA,cAAA;IACA,KAAAX,OAAA,CAAAY,WAAA;EACA;EACAC,OAAA;IACAL,OAAA,WAAAA,QAAA;MACA,KAAAM,KAAA,CAAAC,MAAA,CAAAP,OAAA;IACA;IACAJ,WAAA,WAAAA,YAAA;MACA,KAAAU,KAAA,CAAAC,MAAA,CAAAA,MAAA,SAAAD,KAAA,CAAAC,MAAA,CAAAA,MAAA,CAAAC,QAAA;IACA;IACAC,gBAAA,WAAAA,iBAAAC,IAAA,EAAAtB,KAAA;MACA,SAAAG,aAAA,KAAAH,KAAA;QACA,KAAAI,OAAA,CAAAmB,aAAA,MAAAvB,KAAA,EAAAsB,IAAA,EAAAtB,KAAA;MACA;IACA;EACA;EACAwB,UAAA;IACAlC,UAAA,EAAAA,UAAA;IACAC,cAAA,EAAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}