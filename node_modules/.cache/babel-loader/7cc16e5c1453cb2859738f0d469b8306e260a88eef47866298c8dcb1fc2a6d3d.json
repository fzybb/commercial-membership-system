{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport CubePicker from '../picker/picker.vue';\nimport visibilityMixin from '../../common/mixins/visibility';\nimport popupMixin from '../../common/mixins/popup';\nimport basicPickerMixin from '../../common/mixins/basic-picker';\nimport pickerMixin from '../../common/mixins/picker';\nimport localeMixin from '../../common/mixins/locale';\nvar COMPONENT_NAME = 'cube-cascade-picker';\nvar EVENT_SELECT = 'select';\nvar EVENT_CANCEL = 'cancel';\nvar EVENT_CHANGE = 'change';\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [visibilityMixin, popupMixin, basicPickerMixin, pickerMixin, localeMixin],\n  props: {\n    async: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      cascadeData: this.data.slice(),\n      pickerSelectedIndex: this.selectedIndex.slice(),\n      pickerData: [],\n      pending: false\n    };\n  },\n  created: function created() {\n    this._updatePickerData();\n  },\n  methods: {\n    setData: function setData(data) {\n      var selectedIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      this.pending = false;\n      this.cascadeData = data.slice();\n      this.pickerSelectedIndex = selectedIndex.slice();\n      this._updatePickerData();\n    },\n    _pickerSelect: function _pickerSelect(selectedVal, selectedIndex, selectedText) {\n      this.$emit(EVENT_SELECT, selectedVal, selectedIndex, selectedText);\n    },\n    _pickerCancel: function _pickerCancel() {\n      this.$emit(EVENT_CANCEL);\n    },\n    _pickerChange: function _pickerChange(i, newIndex) {\n      if (newIndex !== this.pickerSelectedIndex[i]) {\n        this.pickerSelectedIndex.splice(i, 1, newIndex);\n        this.async ? this.pending = i !== this.pickerData.length - 1 : this._updatePickerData(i + 1);\n      }\n      this.$emit(EVENT_CHANGE, i, newIndex);\n    },\n    _updatePickerData: function _updatePickerData() {\n      var _this = this;\n      var fromColumn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var data = this.cascadeData;\n      var i = 0;\n      var _loop = function _loop() {\n        if (i >= fromColumn) {\n          var columnData = [];\n          data.forEach(function (item) {\n            columnData.push({\n              value: item[_this.valueKey],\n              text: item[_this.textKey],\n              order: item[_this.orderKey]\n            });\n          });\n          _this.pickerData[i] = columnData;\n          /* refillColumn could only be called after show() */\n          _this.pickerSelectedIndex[i] = fromColumn === 0 ? _this.pickerSelectedIndex[i] < data.length ? _this.pickerSelectedIndex[i] || 0 : 0 : _this.$refs.picker.refillColumn(i, columnData);\n        }\n        data = data.length ? data[_this.pickerSelectedIndex[i]].children : null;\n        i++;\n      };\n      while (data) {\n        _loop();\n      }\n      if (i < this.pickerData.length) {\n        this.pickerData.splice(i, this.pickerData.length - i);\n      }\n      this.pickerData = this.pickerData.slice();\n    }\n  },\n  components: {\n    CubePicker: CubePicker\n  }\n};","map":{"version":3,"names":["CubePicker","visibilityMixin","popupMixin","basicPickerMixin","pickerMixin","localeMixin","COMPONENT_NAME","EVENT_SELECT","EVENT_CANCEL","EVENT_CHANGE","name","mixins","props","async","type","Boolean","data","cascadeData","slice","pickerSelectedIndex","selectedIndex","pickerData","pending","created","_updatePickerData","methods","setData","arguments","length","undefined","_pickerSelect","selectedVal","selectedText","$emit","_pickerCancel","_pickerChange","i","newIndex","splice","_this","fromColumn","_loop","columnData","forEach","item","push","value","valueKey","text","textKey","order","orderKey","$refs","picker","refillColumn","children","components"],"sources":["node_modules/cube-ui/src/components/cascade-picker/cascade-picker.vue"],"sourcesContent":["<template>\n  <cube-picker\n    ref=\"picker\"\n    v-model=\"isVisible\"\n    :data=\"pickerData\"\n    :selected-index=\"pickerSelectedIndex\"\n    :pending=\"pending\"\n    :title=\"title\"\n    :subtitle=\"subtitle\"\n    :z-index=\"zIndex\"\n    :cancel-txt=\"_cancelTxt\"\n    :confirm-txt=\"_confirmTxt\"\n    :swipe-time=\"swipeTime\"\n    :mask-closable=\"maskClosable\"\n    @select=\"_pickerSelect\"\n    @cancel=\"_pickerCancel\"\n    @change=\"_pickerChange\">\n  </cube-picker>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import CubePicker from '../picker/picker.vue'\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  import basicPickerMixin from '../../common/mixins/basic-picker'\n  import pickerMixin from '../../common/mixins/picker'\n  import localeMixin from '../../common/mixins/locale'\n\n  const COMPONENT_NAME = 'cube-cascade-picker'\n  const EVENT_SELECT = 'select'\n  const EVENT_CANCEL = 'cancel'\n  const EVENT_CHANGE = 'change'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin, basicPickerMixin, pickerMixin, localeMixin],\n    props: {\n      async: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      return {\n        cascadeData: this.data.slice(),\n        pickerSelectedIndex: this.selectedIndex.slice(),\n        pickerData: [],\n        pending: false\n      }\n    },\n    created() {\n      this._updatePickerData()\n    },\n    methods: {\n      setData(data, selectedIndex = []) {\n        this.pending = false\n        this.cascadeData = data.slice()\n        this.pickerSelectedIndex = selectedIndex.slice()\n        this._updatePickerData()\n      },\n      _pickerSelect(selectedVal, selectedIndex, selectedText) {\n        this.$emit(EVENT_SELECT, selectedVal, selectedIndex, selectedText)\n      },\n      _pickerCancel() {\n        this.$emit(EVENT_CANCEL)\n      },\n      _pickerChange(i, newIndex) {\n        if (newIndex !== this.pickerSelectedIndex[i]) {\n          this.pickerSelectedIndex.splice(i, 1, newIndex)\n          this.async\n            ? (this.pending = i !== this.pickerData.length - 1)\n            : this._updatePickerData(i + 1)\n        }\n        this.$emit(EVENT_CHANGE, i, newIndex)\n      },\n      _updatePickerData(fromColumn = 0) {\n        let data = this.cascadeData\n        let i = 0\n        while (data) {\n          if (i >= fromColumn) {\n            let columnData = []\n            data.forEach((item) => {\n              columnData.push({\n                value: item[this.valueKey],\n                text: item[this.textKey],\n                order: item[this.orderKey]\n              })\n            })\n            this.pickerData[i] = columnData\n            /* refillColumn could only be called after show() */\n            this.pickerSelectedIndex[i] = fromColumn === 0\n              ? (this.pickerSelectedIndex[i] < data.length ? this.pickerSelectedIndex[i] || 0 : 0)\n              : this.$refs.picker.refillColumn(i, columnData)\n          }\n          data = data.length ? data[this.pickerSelectedIndex[i]].children : null\n\n          i++\n        }\n\n        if (i < this.pickerData.length) {\n          this.pickerData.splice(i, this.pickerData.length - i)\n        }\n\n        this.pickerData = this.pickerData.slice()\n      }\n    },\n    components: {\n      CubePicker\n    }\n  }\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}