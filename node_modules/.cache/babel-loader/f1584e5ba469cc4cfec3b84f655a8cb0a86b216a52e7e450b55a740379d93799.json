{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { createAddAPI } from '../util';\nvar DATE_RE = /^(1|2)\\d{3}[.\\-/]\\d{1,2}[.\\-/]\\d{1,2}$/;\nvar types = {\n  string: function string(val) {\n    return typeof val === 'string';\n  },\n  number: function number(val) {\n    return !isNaN(Number(val));\n  },\n  array: function array(val) {\n    return Array.isArray(val);\n  },\n  date: function date(val) {\n    return !isNaN(Number(val)) || DATE_RE.test(val);\n  },\n  email: function email(val) {\n    return typeof val === 'string' && /^[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)+$/i.test(val);\n  },\n  tel: function tel(val) {\n    return typeof val === 'string' && /^(11|13|14|15|17|18|19)[0-9]{9}$/.test(val);\n  },\n  url: function url(val) {\n    return typeof val === 'string' && /(https?|ftp|file):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/.test(val);\n  }\n};\nvar addType = createAddAPI(types);\nexport { types, addType };","map":{"version":3,"names":["createAddAPI","DATE_RE","types","string","val","number","isNaN","Number","array","Array","isArray","date","test","email","tel","url","addType"],"sources":["C:/Users/fu_71/OneDrive/Desktop/fitness/frontend/node_modules/cube-ui/src/common/helpers/validator/types.js"],"sourcesContent":["import { createAddAPI } from '../util'\n\nconst DATE_RE = /^(1|2)\\d{3}[.\\-/]\\d{1,2}[.\\-/]\\d{1,2}$/\n\nconst types = {\n  string: (val) => {\n    return typeof val === 'string'\n  },\n  number: (val) => {\n    return !isNaN(Number(val))\n  },\n  array: (val) => {\n    return Array.isArray(val)\n  },\n  date: (val) => {\n    return !isNaN(Number(val)) || DATE_RE.test(val)\n  },\n  email: (val) => {\n    return typeof val === 'string' && /^[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)+$/i.test(val)\n  },\n  tel: (val) => {\n    return typeof val === 'string' && /^(11|13|14|15|17|18|19)[0-9]{9}$/.test(val)\n  },\n  url: (val) => {\n    return typeof val === 'string' && /(https?|ftp|file):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/.test(val)\n  }\n}\n\nconst addType = createAddAPI(types)\n\nexport { types, addType }\n"],"mappings":";;;;AAAA,SAASA,YAAY,QAAQ,SAAS;AAEtC,IAAMC,OAAO,GAAG,wCAAwC;AAExD,IAAMC,KAAK,GAAG;EACZC,MAAM,EAAE,SAAAA,OAACC,GAAG,EAAK;IACf,OAAO,OAAOA,GAAG,KAAK,QAAQ;EAChC,CAAC;EACDC,MAAM,EAAE,SAAAA,OAACD,GAAG,EAAK;IACf,OAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC;EAC5B,CAAC;EACDI,KAAK,EAAE,SAAAA,MAACJ,GAAG,EAAK;IACd,OAAOK,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC;EAC3B,CAAC;EACDO,IAAI,EAAE,SAAAA,KAACP,GAAG,EAAK;IACb,OAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAG,CAAC,CAAC,IAAIH,OAAO,CAACW,IAAI,CAACR,GAAG,CAAC;EACjD,CAAC;EACDS,KAAK,EAAE,SAAAA,MAACT,GAAG,EAAK;IACd,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAI,4CAA4C,CAACQ,IAAI,CAACR,GAAG,CAAC;EAC1F,CAAC;EACDU,GAAG,EAAE,SAAAA,IAACV,GAAG,EAAK;IACZ,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAI,kCAAkC,CAACQ,IAAI,CAACR,GAAG,CAAC;EAChF,CAAC;EACDW,GAAG,EAAE,SAAAA,IAACX,GAAG,EAAK;IACZ,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAI,2EAA2E,CAACQ,IAAI,CAACR,GAAG,CAAC;EACzH;AACF,CAAC;AAED,IAAMY,OAAO,GAAGhB,YAAY,CAACE,KAAK,CAAC;AAEnC,SAASA,KAAK,EAAEc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}