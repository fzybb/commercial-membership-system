{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport inputMixin from '../../common/mixins/input';\nvar COMPONENT_NAME = 'cube-input';\nvar EVENT_INPUT = 'input';\nvar EVENT_BLUR = 'blur';\nvar EVENT_FOCUS = 'focus';\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [inputMixin],\n  props: {\n    value: [String, Number],\n    type: {\n      type: String,\n      \"default\": 'text'\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    placeholder: String,\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    autofocus: {\n      type: Boolean,\n      \"default\": false\n    },\n    autocomplete: {\n      type: [Boolean, String],\n      \"default\": false\n    },\n    name: String,\n    id: String,\n    form: String,\n    minlength: Number,\n    maxlength: Number,\n    resize: String,\n    min: Number,\n    max: Number,\n    step: Number,\n    tabindex: String,\n    pattern: String,\n    clearable: {\n      type: [Boolean, Object],\n      \"default\": false\n    },\n    eye: {\n      type: [Boolean, Object],\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      inputValue: this.value,\n      isFocus: false,\n      formatedClearable: {\n        visible: false,\n        blurHidden: true\n      },\n      formatedEye: {\n        open: false,\n        reverse: false\n      }\n    };\n  },\n  computed: {\n    _type: function _type() {\n      var type = this.type;\n      if (type === 'password' && this.eye && this.pwdVisible) {\n        return 'text';\n      }\n      return type;\n    },\n    _showClear: function _showClear() {\n      var visible = this.formatedClearable.visible && this.inputValue && !this.readonly && !this.disabled;\n      if (this.formatedClearable.blurHidden && !this.isFocus) {\n        visible = false;\n      }\n      return visible;\n    },\n    _showPwdEye: function _showPwdEye() {\n      return this.type === 'password' && this.eye && !this.disabled;\n    },\n    pwdVisible: function pwdVisible() {\n      var eye = this.formatedEye;\n      return eye.reverse ? !eye.open : eye.open;\n    },\n    eyeClass: function eyeClass() {\n      return this.formatedEye.open ? 'cubeic-eye-visible' : 'cubeic-eye-invisible';\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.inputValue = newValue;\n    },\n    inputValue: function inputValue(newValue) {\n      this.$emit(EVENT_INPUT, newValue);\n    },\n    clearable: {\n      handler: function handler() {\n        this.formatClearable();\n      },\n      deep: true,\n      immediate: true\n    },\n    eye: {\n      handler: function handler() {\n        this.formateEye();\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    formatClearable: function formatClearable() {\n      if (typeof this.clearable === 'boolean') {\n        this.formatedClearable.visible = this.clearable;\n      } else {\n        Object.assign(this.formatedClearable, this.clearable);\n      }\n    },\n    formateEye: function formateEye() {\n      if (typeof this.eye === 'boolean') {\n        this.formatedEye.open = this.eye;\n      } else {\n        Object.assign(this.formatedEye, this.eye);\n      }\n    },\n    handleFocus: function handleFocus(e) {\n      this.$emit(EVENT_FOCUS, e);\n      this.isFocus = true;\n    },\n    handleBlur: function handleBlur(e) {\n      this.$emit(EVENT_BLUR, e);\n      this.isFocus = false;\n    },\n    handleClear: function handleClear(e) {\n      this.inputValue = '';\n      this.$refs.input.focus();\n    },\n    handlePwdEye: function handlePwdEye() {\n      this.formatedEye.open = !this.formatedEye.open;\n    }\n  }\n};","map":{"version":3,"names":["inputMixin","COMPONENT_NAME","EVENT_INPUT","EVENT_BLUR","EVENT_FOCUS","name","mixins","props","value","String","Number","type","disabled","Boolean","placeholder","readonly","autofocus","autocomplete","id","form","minlength","maxlength","resize","min","max","step","tabindex","pattern","clearable","Object","eye","data","inputValue","isFocus","formatedClearable","visible","blurHidden","formatedEye","open","reverse","computed","_type","pwdVisible","_showClear","_showPwdEye","eyeClass","watch","newValue","$emit","handler","formatClearable","deep","immediate","formateEye","methods","assign","handleFocus","e","handleBlur","handleClear","$refs","input","focus","handlePwdEye"],"sources":["node_modules/cube-ui/src/components/input/input.vue"],"sourcesContent":["<template>\n  <div class=\"cube-input\" :class=\"{'cube-input_active': isFocus}\">\n    <div class=\"cube-input-prepend\" v-if=\"$slots.prepend\">\n      <slot name=\"prepend\"></slot>\n    </div>\n    <input\n      class=\"cube-input-field\"\n      ref=\"input\"\n      v-model=\"inputValue\"\n      v-bind=\"$props\"\n      :type=\"_type\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :autocomplete=\"autocomplete\"\n      :autofocus=\"autofocus\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n      @change=\"changeHander\"\n    >\n    <div class=\"cube-input-append\" v-if=\"$slots.append || _showClear || _showPwdEye\">\n      <div class=\"cube-input-clear\" v-if=\"_showClear\" @touchend=\"handleClear\">\n        <i class=\"cubeic-wrong\"></i>\n      </div>\n      <div class=\"cube-input-eye\" v-if=\"_showPwdEye\" @click=\"handlePwdEye\">\n        <i :class=\"eyeClass\"></i>\n      </div>\n      <slot name=\"append\"></slot>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import inputMixin from '../../common/mixins/input'\n  const COMPONENT_NAME = 'cube-input'\n  const EVENT_INPUT = 'input'\n  const EVENT_BLUR = 'blur'\n  const EVENT_FOCUS = 'focus'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [inputMixin],\n    props: {\n      value: [String, Number],\n      type: {\n        type: String,\n        default: 'text'\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      placeholder: String,\n      readonly: {\n        type: Boolean,\n        default: false\n      },\n      autofocus: {\n        type: Boolean,\n        default: false\n      },\n      autocomplete: {\n        type: [Boolean, String],\n        default: false\n      },\n      name: String,\n      id: String,\n      form: String,\n      minlength: Number,\n      maxlength: Number,\n      resize: String,\n      min: Number,\n      max: Number,\n      step: Number,\n      tabindex: String,\n      pattern: String,\n      clearable: {\n        type: [Boolean, Object],\n        default: false\n      },\n      eye: {\n        type: [Boolean, Object],\n        default: false\n      }\n    },\n    data() {\n      return {\n        inputValue: this.value,\n        isFocus: false,\n        formatedClearable: {\n          visible: false,\n          blurHidden: true\n        },\n        formatedEye: {\n          open: false,\n          reverse: false\n        }\n      }\n    },\n    computed: {\n      _type() {\n        const type = this.type\n        if (type === 'password' && this.eye && this.pwdVisible) {\n          return 'text'\n        }\n        return type\n      },\n      _showClear() {\n        let visible = this.formatedClearable.visible && this.inputValue && !this.readonly && !this.disabled\n        if (this.formatedClearable.blurHidden && !this.isFocus) {\n          visible = false\n        }\n        return visible\n      },\n      _showPwdEye() {\n        return this.type === 'password' && this.eye && !this.disabled\n      },\n      pwdVisible() {\n        const eye = this.formatedEye\n        return eye.reverse ? !eye.open : eye.open\n      },\n      eyeClass() {\n        return this.formatedEye.open ? 'cubeic-eye-visible' : 'cubeic-eye-invisible'\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.inputValue = newValue\n      },\n      inputValue(newValue) {\n        this.$emit(EVENT_INPUT, newValue)\n      },\n      clearable: {\n        handler() {\n          this.formatClearable()\n        },\n        deep: true,\n        immediate: true\n      },\n      eye: {\n        handler() {\n          this.formateEye()\n        },\n        deep: true,\n        immediate: true\n      }\n    },\n    methods: {\n      formatClearable() {\n        if (typeof this.clearable === 'boolean') {\n          this.formatedClearable.visible = this.clearable\n        } else {\n          Object.assign(this.formatedClearable, this.clearable)\n        }\n      },\n      formateEye() {\n        if (typeof this.eye === 'boolean') {\n          this.formatedEye.open = this.eye\n        } else {\n          Object.assign(this.formatedEye, this.eye)\n        }\n      },\n      handleFocus(e) {\n        this.$emit(EVENT_FOCUS, e)\n        this.isFocus = true\n      },\n      handleBlur(e) {\n        this.$emit(EVENT_BLUR, e)\n        this.isFocus = false\n      },\n      handleClear(e) {\n        this.inputValue = ''\n        this.$refs.input.focus()\n      },\n      handlePwdEye() {\n        this.formatedEye.open = !this.formatedEye.open\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n  @require \"../../common/stylus/mixin.styl\"\n\n  .cube-input\n    display: flex\n    align-items: center\n    font-size: $fontsize-medium\n    line-height: 1.429\n    background-color: $input-bgc\n    border-1px($input-border-color)\n  .cube-input-field\n    display: block\n    flex: 1\n    width: 100%\n    min-width: 0\n    padding: 10px\n    box-sizing: border-box\n    color: $input-color\n    line-height: inherit\n    background-color: inherit\n    border-radius: 2px\n    outline: none\n    &::-webkit-input-placeholder\n      color: $input-placeholder-color\n      text-overflow: ellipsis\n    + .cube-input-append\n      .cube-input-clear, .cube-input-eye\n        &:first-child\n          margin-left: -5px\n  .cube-input_active\n    &::after\n      border-color: $input-focus-border-color\n  .cube-input-prepend, .cube-input-append\n    display: flex\n    align-items: center\n  .cube-input-clear, .cube-input-eye\n    width: 1em\n    height: 1em\n    line-height: 1\n    padding: 10px\n    box-sizing: content-box\n    color: $input-clear-icon-color\n    > i\n      display: inline-block\n      transform: scale(1.2)\n  .cube-input-eye\n    >\n      .cubeic-eye-invisible, .cubeic-eye-visible\n        transform: scale(1.4)\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}