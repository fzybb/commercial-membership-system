{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport CubeCheckerItem from './checker-item.vue';\nvar COMPONENT_NAME = 'cube-checker';\nvar EVENT_INPUT = 'input';\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    value: [String, Number, Array],\n    options: {\n      type: Array,\n      \"default\": function _default() {\n        /* istanbul ignore next */\n        return [];\n      }\n    },\n    type: {\n      type: String,\n      \"default\": 'checkbox'\n    },\n    min: {\n      type: Number,\n      \"default\": 0\n    },\n    max: {\n      type: Number,\n      \"default\": function _default() {\n        return this.options.length;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: this.value\n    };\n  },\n  computed: {\n    isRadio: function isRadio() {\n      return this.type === 'radio';\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.currentValue = newValue;\n    },\n    currentValue: function currentValue(val) {\n      this.$emit(EVENT_INPUT, val);\n    }\n  },\n  methods: {\n    check: function check(option) {\n      if (this.isRadio) {\n        this.checkRadio(option);\n      } else {\n        this.checkCheckbox(option);\n      }\n    },\n    checkRadio: function checkRadio(option) {\n      this.currentValue = option.value;\n    },\n    checkCheckbox: function checkCheckbox(option) {\n      var value = option.value;\n      var currentValue = this.currentValue;\n      var valueLen = currentValue.length;\n      var min = this.min;\n      var max = this.max;\n      var index = currentValue.indexOf(value);\n      if (index > -1) {\n        valueLen > min && currentValue.splice(index, 1);\n      } else {\n        valueLen < max && currentValue.push(value);\n      }\n    }\n  },\n  components: {\n    CubeCheckerItem: CubeCheckerItem\n  }\n};","map":{"version":3,"names":["CubeCheckerItem","COMPONENT_NAME","EVENT_INPUT","name","props","value","String","Number","Array","options","type","_default","min","max","length","data","currentValue","computed","isRadio","watch","newValue","val","$emit","methods","check","option","checkRadio","checkCheckbox","valueLen","index","indexOf","splice","push","components"],"sources":["node_modules/cube-ui/src/components/checker/checker.vue"],"sourcesContent":["<template>\n  <ul class=\"cube-checker\">\n    <slot>\n      <cube-checker-item\n        v-for=\"(option, index) in options\"\n        :option=\"option\"\n        :key=\"index\" />\n    </slot>\n  </ul>\n</template>\n<script type=\"text/ecmascript-6\">\n  import CubeCheckerItem from './checker-item.vue'\n  const COMPONENT_NAME = 'cube-checker'\n  const EVENT_INPUT = 'input'\n\n  export default {\n    name: COMPONENT_NAME,\n    props: {\n      value: [String, Number, Array],\n      options: {\n        type: Array,\n        default() {\n          /* istanbul ignore next */\n          return []\n        }\n      },\n      type: {\n        type: String,\n        default: 'checkbox'\n      },\n      min: {\n        type: Number,\n        default: 0\n      },\n      max: {\n        type: Number,\n        default() {\n          return this.options.length\n        }\n      }\n    },\n    data () {\n      return {\n        currentValue: this.value\n      }\n    },\n    computed: {\n      isRadio() {\n        return this.type === 'radio'\n      }\n    },\n    watch: {\n      value (newValue) {\n        this.currentValue = newValue\n      },\n      currentValue (val) {\n        this.$emit(EVENT_INPUT, val)\n      }\n    },\n    methods: {\n      check(option) {\n        if (this.isRadio) {\n          this.checkRadio(option)\n        } else {\n          this.checkCheckbox(option)\n        }\n      },\n      checkRadio(option) {\n        this.currentValue = option.value\n      },\n      checkCheckbox(option) {\n        const value = option.value\n        const currentValue = this.currentValue\n        const valueLen = currentValue.length\n        const min = this.min\n        const max = this.max\n\n        const index = currentValue.indexOf(value)\n\n        if (index > -1) {\n          (valueLen > min) && currentValue.splice(index, 1)\n        } else {\n          (valueLen < max) && currentValue.push(value)\n        }\n      }\n    },\n    components: {\n      CubeCheckerItem\n    }\n  }\n</script>\n"],"mappings":";;;;AAWA,OAAAA,eAAA;AACA,IAAAC,cAAA;AACA,IAAAC,WAAA;AAEA;EACAC,IAAA,EAAAF,cAAA;EACAG,KAAA;IACAC,KAAA,GAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAF,KAAA;MAAA,oBAAAG,SAAA,EACA;QACA;QACA;MACA;IACA;IACAD,IAAA;MACAA,IAAA,EAAAJ,MAAA;MACA;IACA;IACAM,GAAA;MACAF,IAAA,EAAAH,MAAA;MACA;IACA;IACAM,GAAA;MACAH,IAAA,EAAAH,MAAA;MAAA,oBAAAI,SAAA,EACA;QACA,YAAAF,OAAA,CAAAK,MAAA;MACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA,OAAAX;IACA;EACA;EACAY,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,YAAAR,IAAA;IACA;EACA;EACAS,KAAA;IACAd,KAAA,WAAAA,MAAAe,QAAA;MACA,KAAAJ,YAAA,GAAAI,QAAA;IACA;IACAJ,YAAA,WAAAA,aAAAK,GAAA;MACA,KAAAC,KAAA,CAAApB,WAAA,EAAAmB,GAAA;IACA;EACA;EACAE,OAAA;IACAC,KAAA,WAAAA,MAAAC,MAAA;MACA,SAAAP,OAAA;QACA,KAAAQ,UAAA,CAAAD,MAAA;MACA;QACA,KAAAE,aAAA,CAAAF,MAAA;MACA;IACA;IACAC,UAAA,WAAAA,WAAAD,MAAA;MACA,KAAAT,YAAA,GAAAS,MAAA,CAAApB,KAAA;IACA;IACAsB,aAAA,WAAAA,cAAAF,MAAA;MACA,IAAApB,KAAA,GAAAoB,MAAA,CAAApB,KAAA;MACA,IAAAW,YAAA,QAAAA,YAAA;MACA,IAAAY,QAAA,GAAAZ,YAAA,CAAAF,MAAA;MACA,IAAAF,GAAA,QAAAA,GAAA;MACA,IAAAC,GAAA,QAAAA,GAAA;MAEA,IAAAgB,KAAA,GAAAb,YAAA,CAAAc,OAAA,CAAAzB,KAAA;MAEA,IAAAwB,KAAA;QACAD,QAAA,GAAAhB,GAAA,IAAAI,YAAA,CAAAe,MAAA,CAAAF,KAAA;MACA;QACAD,QAAA,GAAAf,GAAA,IAAAG,YAAA,CAAAgB,IAAA,CAAA3B,KAAA;MACA;IACA;EACA;EACA4B,UAAA;IACAjC,eAAA,EAAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}